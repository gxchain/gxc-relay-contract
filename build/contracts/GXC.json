{
  "contractName": "GXC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "to",
          "type": "string"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "txid",
          "type": "string"
        }
      ],
      "name": "DELIVER",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADJUST_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DELIVER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "txid",
          "type": "string"
        }
      ],
      "name": "deliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "to",
          "type": "string"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_burnMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintMin",
          "type": "uint256"
        }
      ],
      "name": "adjustMinNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTxidArray",
      "outputs": [
        {
          "internalType": "string[10]",
          "name": "",
          "type": "string[10]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"txid\",\"type\":\"string\"}],\"name\":\"DELIVER\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADJUST_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELIVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintMin\",\"type\":\"uint256\"}],\"name\":\"adjustMinNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"txid\",\"type\":\"string\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTxidArray\",\"outputs\":[{\"internalType\":\"string[10]\",\"name\":\"\",\"type\":\"string[10]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/bijianing/gxc-solidity/contracts/GXC.sol\":\"GXC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bijianing/gxc-solidity/contracts/GXC.sol\":{\"keccak256\":\"0x0587fd2c07d7215520b523ab27cd3823ef3794b51e3bd299d97b962856b524fd\",\"urls\":[\"bzz-raw://7de59e432e29a68c7d3794c73d888dc45dfd69024da9950a9a4e27435b283f5d\",\"dweb:/ipfs/QmePdX3LQwutLb2FaNg5Fb1SoaJ4MwwgyZ88FBSuJG4fEp\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x6080604052600a60115561c35060135561c3506014556005601560006101000a81548160ff021916908360ff1602179055503480156200003e57600080fd5b5060405162003f6338038062003f63833981810160405262000064919081019062000487565b818181818160049080519060200190620000809291906200037c565b508060059080519060200190620000999291906200037c565b506012600660006101000a81548160ff021916908360ff16021790555050506000600660016101000a81548160ff021916908315150217905550620000f76000801b620000eb620001c860201b60201c565b620001d060201b60201c565b6200012d6040516200010990620005d7565b604051809103902062000121620001c860201b60201c565b620001d060201b60201c565b620001636040516200013f90620005c0565b604051809103902062000157620001c860201b60201c565b620001d060201b60201c565b50506200018a601560009054906101000a900460ff16620001e660201b620037a51760201c565b620001c06040516200019c90620005ee565b6040518091039020620001b4620001c860201b60201c565b620001d060201b60201c565b5050620006a1565b600033905090565b620001e282826200020460201b60201c565b5050565b80600660006101000a81548160ff021916908360ff16021790555050565b6200023281600080858152602001908152602001600020600001620002a760201b62001ecc1790919060201c565b15620002a35762000248620001c860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002d7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620002df60201b60201c565b905092915050565b6000620002f383836200035960201b60201c565b6200034e57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000353565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003bf57805160ff1916838001178555620003f0565b82800160010185558215620003f0579182015b82811115620003ef578251825591602001919060010190620003d2565b5b509050620003ff919062000403565b5090565b6200042891905b80821115620004245760008160009055506001016200040a565b5090565b90565b600082601f8301126200043d57600080fd5b8151620004546200044e8262000633565b62000605565b915080825260208301602083018583830111156200047157600080fd5b6200047e8382846200066b565b50505092915050565b600080604083850312156200049b57600080fd5b600083015167ffffffffffffffff811115620004b657600080fd5b620004c4858286016200042b565b925050602083015167ffffffffffffffff811115620004e257600080fd5b620004f0858286016200042b565b9150509250929050565b600062000509600b8362000660565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b60006200054b600b8362000660565b91507f4d494e5445525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b60006200058d600b8362000660565b91507f41444a5553545f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000620005cd82620004fa565b9150819050919050565b6000620005e4826200053c565b9150819050919050565b6000620005fb826200057e565b9150819050919050565b6000604051905081810181811067ffffffffffffffff821117156200062957600080fd5b8060405250919050565b600067ffffffffffffffff8211156200064b57600080fd5b601f19601f8301169050602081019050919050565b600081905092915050565b60005b838110156200068b5780820151818401526020810190506200066e565b838111156200069b576000848401525b50505050565b6138b280620006b16000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637641e6f31161011a578063a457c2d7116100ad578063ca15c8731161007c578063ca15c873146105b2578063d5391393146105e2578063d547741f14610600578063dd62ed3e1461061c578063e63ab1e91461064c576101fb565b8063a457c2d714610516578063a9059cbb14610546578063b0ab396814610576578063b10fe70414610594576101fb565b806391d14854116100e957806391d148541461048e57806395d89b41146104be5780639b308f9e146104dc578063a217fddf146104f8576101fb565b80637641e6f31461041c57806379cc6790146104385780638456cb59146104545780639010d07c1461045e576101fb565b806336568abe1161019257806342966c681161016157806342966c68146103945780635c975abb146103b05780636210ee85146103ce57806370a08231146103ec576101fb565b806336568abe14610322578063395093511461033e5780633f4ba83a1461036e57806340c10f1914610378576101fb565b8063248a9ca3116101ce578063248a9ca31461029c5780632f2ff15d146102cc578063313ce567146102e857806334d4d1ac14610306576101fb565b806306fdde0314610200578063095ea7b31461021e57806318160ddd1461024e57806323b872dd1461026c575b600080fd5b61020861066a565b604051610215919061320d565b60405180910390f35b610238600480360361023391908101906123e0565b61070c565b60405161024591906131d7565b60405180910390f35b61025661072a565b60405161026391906134ef565b60405180910390f35b61028660048036036102819190810190612391565b610734565b60405161029391906131d7565b60405180910390f35b6102b660048036036102b191908101906124af565b61080d565b6040516102c391906131f2565b60405180910390f35b6102e660048036036102e191908101906124d8565b61082c565b005b6102f061089f565b6040516102fd919061357f565b60405180910390f35b610320600480360361031b919081019061241c565b6108b6565b005b61033c600480360361033791908101906124d8565b610ac3565b005b610358600480360361035391908101906123e0565b610b46565b60405161036591906131d7565b60405180910390f35b610376610bf9565b005b610392600480360361038d91908101906123e0565b610c66565b005b6103ae60048036036103a99190810190612550565b610cd7565b005b6103b8610ceb565b6040516103c591906131d7565b60405180910390f35b6103d6610d02565b6040516103e391906131b5565b60405180910390f35b6104066004803603610401919081019061232c565b610ddf565b60405161041391906134ef565b60405180910390f35b61043660048036036104319190810190612579565b610e28565b005b610452600480360361044d91908101906123e0565b610eca565b005b61045c610f2c565b005b61047860048036036104739190810190612514565b610f99565b604051610485919061317f565b60405180910390f35b6104a860048036036104a391908101906124d8565b610fca565b6040516104b591906131d7565b60405180910390f35b6104c6610ffb565b6040516104d3919061320d565b60405180910390f35b6104f660048036036104f191908101906125cd565b61109d565b005b610500611112565b60405161050d91906131f2565b60405180910390f35b610530600480360361052b91908101906123e0565b611119565b60405161053d91906131d7565b60405180910390f35b610560600480360361055b91908101906123e0565b6111e6565b60405161056d91906131d7565b60405180910390f35b61057e611204565b60405161058b91906131f2565b60405180910390f35b61059c61121b565b6040516105a991906131f2565b60405180910390f35b6105cc60048036036105c791908101906124af565b611232565b6040516105d991906134ef565b60405180910390f35b6105ea611258565b6040516105f791906131f2565b60405180910390f35b61061a600480360361061591908101906124d8565b61126f565b005b61063660048036036106319190810190612355565b6112e2565b60405161064391906134ef565b60405180910390f35b610654611369565b60405161066191906131f2565b60405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b5050505050905090565b6000610720610719611380565b8484611388565b6001905092915050565b6000600354905090565b6000610741848484611553565b6108028461074d611380565b6107fd8560405180606001604052806028815260200161380c60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107b3611380565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b611388565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b6108526000808481526020019081526020016000206002015461084d611380565b610fca565b610891576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108889061328f565b60405180910390fd5b61089b8282611847565b5050565b6000600660009054906101000a900460ff16905090565b6013548310156108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f29061342f565b60405180910390fd5b61091f60405161090a9061316a565b604051809103902061091a611380565b610fca565b61095e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109559061322f565b60405180910390fd5b60008090505b601154811015610a17578160405160200161097f91906130fd565b60405160208183030381529060405280519060200120600782600a81106109a257fe5b016040516020016109b39190613114565b604051602081830303815290604052805190602001201415610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a01906132ef565b60405180910390fd5b8080600101915050610964565b50600060115460125481610a2757fe5b06905081600782600a8110610a3857fe5b019080519060200190610a4c9291906121cc565b50601260008154809291906001019190505550610a6985856111e6565b508473ffffffffffffffffffffffffffffffffffffffff167fdb647366180c7f298da5d34c14b9bb2822ef90bcc27e74c130a6de9072aaa872858585604051610ab49392919061353a565b60405180910390a25050505050565b610acb611380565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f9061348f565b60405180910390fd5b610b4282826118da565b5050565b6000610bef610b53611380565b84610bea8560026000610b64611380565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461196d90919063ffffffff16565b611388565b6001905092915050565b610c1d604051610c089061312b565b6040518091039020610c18611380565b610fca565b610c5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c53906132cf565b60405180910390fd5b610c646119c2565b565b610c8a604051610c7590613140565b6040518091039020610c85611380565b610fca565b610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc0906133cf565b60405180910390fd5b610cd38282611a6c565b5050565b610ce8610ce2611380565b82611c02565b50565b6000600660019054906101000a900460ff16905090565b610d0a61224c565b6007600a80602002604051908101604052809291906000905b82821015610dd6578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dc25780601f10610d9757610100808354040283529160200191610dc2565b820191906000526020600020905b815481529060010190602001808311610da557829003601f168201915b505050505081526020019060010190610d23565b50505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b601454821015610e6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e649061336f565b60405180910390fd5b610e7682610cd7565b3373ffffffffffffffffffffffffffffffffffffffff167f47e772fda56eb54ab211642ce5421882c49fc2b7033455982af14588ae4207ff8383604051610ebe92919061350a565b60405180910390a25050565b6000610f098260405180606001604052806024815260200161383460249139610efa86610ef5611380565b6112e2565b6117ec9092919063ffffffff16565b9050610f1d83610f17611380565b83611388565b610f278383611c02565b505050565b610f50604051610f3b9061312b565b6040518091039020610f4b611380565b610fca565b610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f869061346f565b60405180910390fd5b610f97611db2565b565b6000610fc282600080868152602001908152602001600020600001611e5d90919063ffffffff16565b905092915050565b6000610ff382600080868152602001908152602001600020600001611e7790919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110935780601f1061106857610100808354040283529160200191611093565b820191906000526020600020905b81548152906001019060200180831161107657829003601f168201915b5050505050905090565b6110c16040516110ac90613155565b60405180910390206110bc611380565b610fca565b611100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f79061334f565b60405180910390fd5b80601381905550816014819055505050565b6000801b81565b60006111dc611126611380565b846111d7856040518060600160405280602581526020016138586025913960026000611150611380565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b611388565b6001905092915050565b60006111fa6111f3611380565b8484611553565b6001905092915050565b60405161121090613155565b604051809103902081565b6040516112279061316a565b604051809103902081565b6000611251600080848152602001908152602001600020600001611ea7565b9050919050565b60405161126490613140565b604051809103902081565b61129560008084815260200190815260200160002060020154611290611380565b610fca565b6112d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb9061338f565b60405180910390fd5b6112de82826118da565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040516113759061312b565b604051809103902081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ef9061344f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145f9061330f565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161154691906134ef565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ba9061340f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162a9061326f565b60405180910390fd5b61163e838383611ebc565b6116aa816040518060600160405280602681526020016137e660269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061173f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461196d90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117df91906134ef565b60405180910390a3505050565b6000838311158290611834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182b919061320d565b60405180910390fd5b5060008385039050809150509392505050565b61186e81600080858152602001908152602001600020600001611ecc90919063ffffffff16565b156118d65761187b611380565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61190181600080858152602001908152602001600020600001611efc90919063ffffffff16565b156119695761190e611380565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000808284019050838110156119b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119af9061332f565b60405180910390fd5b8091505092915050565b600660019054906101000a900460ff16611a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a08906132af565b60405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611a55611380565b604051611a62919061319a565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad3906134af565b60405180910390fd5b611ae860008383611ebc565b611afd8160035461196d90919063ffffffff16565b600381905550611b5581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461196d90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bf691906134ef565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c69906133ef565b60405180910390fd5b611c7e82600083611ebc565b611cea816040518060600160405280602281526020016137c460229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d4281600354611f2c90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611da691906134ef565b60405180910390a35050565b600660019054906101000a900460ff1615611e02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df9906133af565b60405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e46611380565b604051611e53919061319a565b60405180910390a1565b6000611e6c8360000183611f76565b60001c905092915050565b6000611e9f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611fe3565b905092915050565b6000611eb582600001612006565b9050919050565b611ec7838383612017565b505050565b6000611ef4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61206f565b905092915050565b6000611f24836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6120df565b905092915050565b6000611f6e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117ec565b905092915050565b600081836000018054905011611fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fb89061324f565b60405180910390fd5b826000018281548110611fd057fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6120228383836121c7565b61202a610ceb565b1561206a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612061906134cf565b60405180910390fd5b505050565b600061207b8383611fe3565b6120d45782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506120d9565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146121bb576000600182039050600060018660000180549050039050600086600001828154811061212a57fe5b906000526020600020015490508087600001848154811061214757fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061217f57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506121c1565b60009150505b92915050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061220d57805160ff191683800117855561223b565b8280016001018555821561223b579182015b8281111561223a57825182559160200191906001019061221f565b5b5090506122489190612274565b5090565b604051806101400160405280600a905b606081526020019060019003908161225c5790505090565b61229691905b8082111561229257600081600090555060010161227a565b5090565b90565b6000813590506122a881613760565b92915050565b6000813590506122bd81613777565b92915050565b600082601f8301126122d457600080fd5b81356122e76122e2826135c7565b61359a565b9150808252602083016020830185838301111561230357600080fd5b61230e83828461370d565b50505092915050565b6000813590506123268161378e565b92915050565b60006020828403121561233e57600080fd5b600061234c84828501612299565b91505092915050565b6000806040838503121561236857600080fd5b600061237685828601612299565b925050602061238785828601612299565b9150509250929050565b6000806000606084860312156123a657600080fd5b60006123b486828701612299565b93505060206123c586828701612299565b92505060406123d686828701612317565b9150509250925092565b600080604083850312156123f357600080fd5b600061240185828601612299565b925050602061241285828601612317565b9150509250929050565b6000806000806080858703121561243257600080fd5b600061244087828801612299565b945050602061245187828801612317565b935050604085013567ffffffffffffffff81111561246e57600080fd5b61247a878288016122c3565b925050606085013567ffffffffffffffff81111561249757600080fd5b6124a3878288016122c3565b91505092959194509250565b6000602082840312156124c157600080fd5b60006124cf848285016122ae565b91505092915050565b600080604083850312156124eb57600080fd5b60006124f9858286016122ae565b925050602061250a85828601612299565b9150509250929050565b6000806040838503121561252757600080fd5b6000612535858286016122ae565b925050602061254685828601612317565b9150509250929050565b60006020828403121561256257600080fd5b600061257084828501612317565b91505092915050565b6000806040838503121561258c57600080fd5b600061259a85828601612317565b925050602083013567ffffffffffffffff8111156125b757600080fd5b6125c3858286016122c3565b9150509250929050565b600080604083850312156125e057600080fd5b60006125ee85828601612317565b92505060206125ff85828601612317565b9150509250929050565b60006126158383612738565b905092915050565b612626816136d7565b82525050565b61263581613678565b82525050565b600061264682613612565b6126508185613640565b935083602082028501612662856135f3565b8060005b8581101561269e578484038952815161267f8582612609565b945061268a83613633565b925060208a01995050600181019050612666565b50829750879550505050505092915050565b6126b98161368a565b82525050565b6126c881613696565b82525050565b60006126d982613628565b6126e3818561365c565b93506126f381856020860161371c565b6126fc8161374f565b840191505092915050565b600061271282613628565b61271c818561366d565b935061272c81856020860161371c565b80840191505092915050565b60006127438261361d565b61274d818561364b565b935061275d81856020860161371c565b6127668161374f565b840191505092915050565b60008154600181166000811461278e57600181146127b3576127f7565b607f600283041661279f818761366d565b955060ff19831686528086019350506127f7565b600282046127c1818761366d565b95506127cc856135fd565b60005b828110156127ee578154818901526001820191506020810190506127cf565b82880195505050505b505092915050565b600061280c60218361365c565b91507f4d75737420686176652064656c6976657220726f6c6520746f2064656c69766560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061287260228361365c565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006128d860238361365c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061293e602f8361365c565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b60006129a460148361365c565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b60006129e460398361365c565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f20756e7061757365000000000000006020830152604082019050919050565b6000612a4a60148361365c565b91507f54686520747869642068617320657869737465640000000000000000000000006000830152602082019050919050565b6000612a8a60228361365c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612af0601b8361365c565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000612b3060148361365c565b91507f41646a75737420726f6c652072657175697265640000000000000000000000006000830152602082019050919050565b6000612b70602e8361365c565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4275726e0000000000000000000000000000000000006020830152604082019050919050565b6000612bd660308361365c565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000612c3c600b8361366d565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612c7c60108361365c565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000612cbc60368361365c565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f7665206d696e74657220726f6c6520746f206d696e74000000000000000000006020830152604082019050919050565b6000612d22600b8361366d565b91507f4d494e5445525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612d6260218361365c565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612dc860258361365c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e2e602e8361365c565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4d696e740000000000000000000000000000000000006020830152604082019050919050565b6000612e9460248361365c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612efa60378361365c565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f2070617573650000000000000000006020830152604082019050919050565b6000612f60600b8361366d565b91507f41444a5553545f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612fa0600c8361366d565b91507f44454c495645525f524f4c4500000000000000000000000000000000000000006000830152600c82019050919050565b6000612fe0602f8361365c565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b6000613046601f8361365c565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6000613086602a8361365c565b91507f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008301527f696c6520706175736564000000000000000000000000000000000000000000006020830152604082019050919050565b6130e8816136c0565b82525050565b6130f7816136ca565b82525050565b60006131098284612707565b915081905092915050565b60006131208284612771565b915081905092915050565b600061313682612c2f565b9150819050919050565b600061314b82612d15565b9150819050919050565b600061316082612f53565b9150819050919050565b600061317582612f93565b9150819050919050565b6000602082019050613194600083018461262c565b92915050565b60006020820190506131af600083018461261d565b92915050565b600060208201905081810360008301526131cf818461263b565b905092915050565b60006020820190506131ec60008301846126b0565b92915050565b600060208201905061320760008301846126bf565b92915050565b6000602082019050818103600083015261322781846126ce565b905092915050565b60006020820190508181036000830152613248816127ff565b9050919050565b6000602082019050818103600083015261326881612865565b9050919050565b60006020820190508181036000830152613288816128cb565b9050919050565b600060208201905081810360008301526132a881612931565b9050919050565b600060208201905081810360008301526132c881612997565b9050919050565b600060208201905081810360008301526132e8816129d7565b9050919050565b6000602082019050818103600083015261330881612a3d565b9050919050565b6000602082019050818103600083015261332881612a7d565b9050919050565b6000602082019050818103600083015261334881612ae3565b9050919050565b6000602082019050818103600083015261336881612b23565b9050919050565b6000602082019050818103600083015261338881612b63565b9050919050565b600060208201905081810360008301526133a881612bc9565b9050919050565b600060208201905081810360008301526133c881612c6f565b9050919050565b600060208201905081810360008301526133e881612caf565b9050919050565b6000602082019050818103600083015261340881612d55565b9050919050565b6000602082019050818103600083015261342881612dbb565b9050919050565b6000602082019050818103600083015261344881612e21565b9050919050565b6000602082019050818103600083015261346881612e87565b9050919050565b6000602082019050818103600083015261348881612eed565b9050919050565b600060208201905081810360008301526134a881612fd3565b9050919050565b600060208201905081810360008301526134c881613039565b9050919050565b600060208201905081810360008301526134e881613079565b9050919050565b600060208201905061350460008301846130df565b92915050565b600060408201905061351f60008301856130df565b818103602083015261353181846126ce565b90509392505050565b600060608201905061354f60008301866130df565b818103602083015261356181856126ce565b9050818103604083015261357581846126ce565b9050949350505050565b600060208201905061359460008301846130ee565b92915050565b6000604051905081810181811067ffffffffffffffff821117156135bd57600080fd5b8060405250919050565b600067ffffffffffffffff8211156135de57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b60008190508160005260206000209050919050565b6000600a9050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613683826136a0565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006136e2826136e9565b9050919050565b60006136f4826136fb565b9050919050565b6000613706826136a0565b9050919050565b82818337600083830152505050565b60005b8381101561373a57808201518184015260208101905061371f565b83811115613749576000848401525b50505050565b6000601f19601f8301169050919050565b61376981613678565b811461377457600080fd5b50565b61378081613696565b811461378b57600080fd5b50565b613797816136c0565b81146137a257600080fd5b50565b80600660006101000a81548160ff021916908360ff1602179055505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b8fcec8f85b77ad2f9e3c4bad573a8afc9c92d70cab6551da9a4e843d9a70ffa64736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637641e6f31161011a578063a457c2d7116100ad578063ca15c8731161007c578063ca15c873146105b2578063d5391393146105e2578063d547741f14610600578063dd62ed3e1461061c578063e63ab1e91461064c576101fb565b8063a457c2d714610516578063a9059cbb14610546578063b0ab396814610576578063b10fe70414610594576101fb565b806391d14854116100e957806391d148541461048e57806395d89b41146104be5780639b308f9e146104dc578063a217fddf146104f8576101fb565b80637641e6f31461041c57806379cc6790146104385780638456cb59146104545780639010d07c1461045e576101fb565b806336568abe1161019257806342966c681161016157806342966c68146103945780635c975abb146103b05780636210ee85146103ce57806370a08231146103ec576101fb565b806336568abe14610322578063395093511461033e5780633f4ba83a1461036e57806340c10f1914610378576101fb565b8063248a9ca3116101ce578063248a9ca31461029c5780632f2ff15d146102cc578063313ce567146102e857806334d4d1ac14610306576101fb565b806306fdde0314610200578063095ea7b31461021e57806318160ddd1461024e57806323b872dd1461026c575b600080fd5b61020861066a565b604051610215919061320d565b60405180910390f35b610238600480360361023391908101906123e0565b61070c565b60405161024591906131d7565b60405180910390f35b61025661072a565b60405161026391906134ef565b60405180910390f35b61028660048036036102819190810190612391565b610734565b60405161029391906131d7565b60405180910390f35b6102b660048036036102b191908101906124af565b61080d565b6040516102c391906131f2565b60405180910390f35b6102e660048036036102e191908101906124d8565b61082c565b005b6102f061089f565b6040516102fd919061357f565b60405180910390f35b610320600480360361031b919081019061241c565b6108b6565b005b61033c600480360361033791908101906124d8565b610ac3565b005b610358600480360361035391908101906123e0565b610b46565b60405161036591906131d7565b60405180910390f35b610376610bf9565b005b610392600480360361038d91908101906123e0565b610c66565b005b6103ae60048036036103a99190810190612550565b610cd7565b005b6103b8610ceb565b6040516103c591906131d7565b60405180910390f35b6103d6610d02565b6040516103e391906131b5565b60405180910390f35b6104066004803603610401919081019061232c565b610ddf565b60405161041391906134ef565b60405180910390f35b61043660048036036104319190810190612579565b610e28565b005b610452600480360361044d91908101906123e0565b610eca565b005b61045c610f2c565b005b61047860048036036104739190810190612514565b610f99565b604051610485919061317f565b60405180910390f35b6104a860048036036104a391908101906124d8565b610fca565b6040516104b591906131d7565b60405180910390f35b6104c6610ffb565b6040516104d3919061320d565b60405180910390f35b6104f660048036036104f191908101906125cd565b61109d565b005b610500611112565b60405161050d91906131f2565b60405180910390f35b610530600480360361052b91908101906123e0565b611119565b60405161053d91906131d7565b60405180910390f35b610560600480360361055b91908101906123e0565b6111e6565b60405161056d91906131d7565b60405180910390f35b61057e611204565b60405161058b91906131f2565b60405180910390f35b61059c61121b565b6040516105a991906131f2565b60405180910390f35b6105cc60048036036105c791908101906124af565b611232565b6040516105d991906134ef565b60405180910390f35b6105ea611258565b6040516105f791906131f2565b60405180910390f35b61061a600480360361061591908101906124d8565b61126f565b005b61063660048036036106319190810190612355565b6112e2565b60405161064391906134ef565b60405180910390f35b610654611369565b60405161066191906131f2565b60405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b5050505050905090565b6000610720610719611380565b8484611388565b6001905092915050565b6000600354905090565b6000610741848484611553565b6108028461074d611380565b6107fd8560405180606001604052806028815260200161380c60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107b3611380565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b611388565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b6108526000808481526020019081526020016000206002015461084d611380565b610fca565b610891576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108889061328f565b60405180910390fd5b61089b8282611847565b5050565b6000600660009054906101000a900460ff16905090565b6013548310156108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f29061342f565b60405180910390fd5b61091f60405161090a9061316a565b604051809103902061091a611380565b610fca565b61095e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109559061322f565b60405180910390fd5b60008090505b601154811015610a17578160405160200161097f91906130fd565b60405160208183030381529060405280519060200120600782600a81106109a257fe5b016040516020016109b39190613114565b604051602081830303815290604052805190602001201415610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a01906132ef565b60405180910390fd5b8080600101915050610964565b50600060115460125481610a2757fe5b06905081600782600a8110610a3857fe5b019080519060200190610a4c9291906121cc565b50601260008154809291906001019190505550610a6985856111e6565b508473ffffffffffffffffffffffffffffffffffffffff167fdb647366180c7f298da5d34c14b9bb2822ef90bcc27e74c130a6de9072aaa872858585604051610ab49392919061353a565b60405180910390a25050505050565b610acb611380565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f9061348f565b60405180910390fd5b610b4282826118da565b5050565b6000610bef610b53611380565b84610bea8560026000610b64611380565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461196d90919063ffffffff16565b611388565b6001905092915050565b610c1d604051610c089061312b565b6040518091039020610c18611380565b610fca565b610c5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c53906132cf565b60405180910390fd5b610c646119c2565b565b610c8a604051610c7590613140565b6040518091039020610c85611380565b610fca565b610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc0906133cf565b60405180910390fd5b610cd38282611a6c565b5050565b610ce8610ce2611380565b82611c02565b50565b6000600660019054906101000a900460ff16905090565b610d0a61224c565b6007600a80602002604051908101604052809291906000905b82821015610dd6578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dc25780601f10610d9757610100808354040283529160200191610dc2565b820191906000526020600020905b815481529060010190602001808311610da557829003601f168201915b505050505081526020019060010190610d23565b50505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b601454821015610e6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e649061336f565b60405180910390fd5b610e7682610cd7565b3373ffffffffffffffffffffffffffffffffffffffff167f47e772fda56eb54ab211642ce5421882c49fc2b7033455982af14588ae4207ff8383604051610ebe92919061350a565b60405180910390a25050565b6000610f098260405180606001604052806024815260200161383460249139610efa86610ef5611380565b6112e2565b6117ec9092919063ffffffff16565b9050610f1d83610f17611380565b83611388565b610f278383611c02565b505050565b610f50604051610f3b9061312b565b6040518091039020610f4b611380565b610fca565b610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f869061346f565b60405180910390fd5b610f97611db2565b565b6000610fc282600080868152602001908152602001600020600001611e5d90919063ffffffff16565b905092915050565b6000610ff382600080868152602001908152602001600020600001611e7790919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110935780601f1061106857610100808354040283529160200191611093565b820191906000526020600020905b81548152906001019060200180831161107657829003601f168201915b5050505050905090565b6110c16040516110ac90613155565b60405180910390206110bc611380565b610fca565b611100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f79061334f565b60405180910390fd5b80601381905550816014819055505050565b6000801b81565b60006111dc611126611380565b846111d7856040518060600160405280602581526020016138586025913960026000611150611380565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b611388565b6001905092915050565b60006111fa6111f3611380565b8484611553565b6001905092915050565b60405161121090613155565b604051809103902081565b6040516112279061316a565b604051809103902081565b6000611251600080848152602001908152602001600020600001611ea7565b9050919050565b60405161126490613140565b604051809103902081565b61129560008084815260200190815260200160002060020154611290611380565b610fca565b6112d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb9061338f565b60405180910390fd5b6112de82826118da565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040516113759061312b565b604051809103902081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ef9061344f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145f9061330f565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161154691906134ef565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ba9061340f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162a9061326f565b60405180910390fd5b61163e838383611ebc565b6116aa816040518060600160405280602681526020016137e660269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061173f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461196d90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117df91906134ef565b60405180910390a3505050565b6000838311158290611834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182b919061320d565b60405180910390fd5b5060008385039050809150509392505050565b61186e81600080858152602001908152602001600020600001611ecc90919063ffffffff16565b156118d65761187b611380565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61190181600080858152602001908152602001600020600001611efc90919063ffffffff16565b156119695761190e611380565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000808284019050838110156119b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119af9061332f565b60405180910390fd5b8091505092915050565b600660019054906101000a900460ff16611a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a08906132af565b60405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611a55611380565b604051611a62919061319a565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad3906134af565b60405180910390fd5b611ae860008383611ebc565b611afd8160035461196d90919063ffffffff16565b600381905550611b5581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461196d90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bf691906134ef565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c69906133ef565b60405180910390fd5b611c7e82600083611ebc565b611cea816040518060600160405280602281526020016137c460229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ec9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d4281600354611f2c90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611da691906134ef565b60405180910390a35050565b600660019054906101000a900460ff1615611e02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df9906133af565b60405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e46611380565b604051611e53919061319a565b60405180910390a1565b6000611e6c8360000183611f76565b60001c905092915050565b6000611e9f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611fe3565b905092915050565b6000611eb582600001612006565b9050919050565b611ec7838383612017565b505050565b6000611ef4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61206f565b905092915050565b6000611f24836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6120df565b905092915050565b6000611f6e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117ec565b905092915050565b600081836000018054905011611fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fb89061324f565b60405180910390fd5b826000018281548110611fd057fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6120228383836121c7565b61202a610ceb565b1561206a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612061906134cf565b60405180910390fd5b505050565b600061207b8383611fe3565b6120d45782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506120d9565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146121bb576000600182039050600060018660000180549050039050600086600001828154811061212a57fe5b906000526020600020015490508087600001848154811061214757fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061217f57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506121c1565b60009150505b92915050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061220d57805160ff191683800117855561223b565b8280016001018555821561223b579182015b8281111561223a57825182559160200191906001019061221f565b5b5090506122489190612274565b5090565b604051806101400160405280600a905b606081526020019060019003908161225c5790505090565b61229691905b8082111561229257600081600090555060010161227a565b5090565b90565b6000813590506122a881613760565b92915050565b6000813590506122bd81613777565b92915050565b600082601f8301126122d457600080fd5b81356122e76122e2826135c7565b61359a565b9150808252602083016020830185838301111561230357600080fd5b61230e83828461370d565b50505092915050565b6000813590506123268161378e565b92915050565b60006020828403121561233e57600080fd5b600061234c84828501612299565b91505092915050565b6000806040838503121561236857600080fd5b600061237685828601612299565b925050602061238785828601612299565b9150509250929050565b6000806000606084860312156123a657600080fd5b60006123b486828701612299565b93505060206123c586828701612299565b92505060406123d686828701612317565b9150509250925092565b600080604083850312156123f357600080fd5b600061240185828601612299565b925050602061241285828601612317565b9150509250929050565b6000806000806080858703121561243257600080fd5b600061244087828801612299565b945050602061245187828801612317565b935050604085013567ffffffffffffffff81111561246e57600080fd5b61247a878288016122c3565b925050606085013567ffffffffffffffff81111561249757600080fd5b6124a3878288016122c3565b91505092959194509250565b6000602082840312156124c157600080fd5b60006124cf848285016122ae565b91505092915050565b600080604083850312156124eb57600080fd5b60006124f9858286016122ae565b925050602061250a85828601612299565b9150509250929050565b6000806040838503121561252757600080fd5b6000612535858286016122ae565b925050602061254685828601612317565b9150509250929050565b60006020828403121561256257600080fd5b600061257084828501612317565b91505092915050565b6000806040838503121561258c57600080fd5b600061259a85828601612317565b925050602083013567ffffffffffffffff8111156125b757600080fd5b6125c3858286016122c3565b9150509250929050565b600080604083850312156125e057600080fd5b60006125ee85828601612317565b92505060206125ff85828601612317565b9150509250929050565b60006126158383612738565b905092915050565b612626816136d7565b82525050565b61263581613678565b82525050565b600061264682613612565b6126508185613640565b935083602082028501612662856135f3565b8060005b8581101561269e578484038952815161267f8582612609565b945061268a83613633565b925060208a01995050600181019050612666565b50829750879550505050505092915050565b6126b98161368a565b82525050565b6126c881613696565b82525050565b60006126d982613628565b6126e3818561365c565b93506126f381856020860161371c565b6126fc8161374f565b840191505092915050565b600061271282613628565b61271c818561366d565b935061272c81856020860161371c565b80840191505092915050565b60006127438261361d565b61274d818561364b565b935061275d81856020860161371c565b6127668161374f565b840191505092915050565b60008154600181166000811461278e57600181146127b3576127f7565b607f600283041661279f818761366d565b955060ff19831686528086019350506127f7565b600282046127c1818761366d565b95506127cc856135fd565b60005b828110156127ee578154818901526001820191506020810190506127cf565b82880195505050505b505092915050565b600061280c60218361365c565b91507f4d75737420686176652064656c6976657220726f6c6520746f2064656c69766560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061287260228361365c565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006128d860238361365c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061293e602f8361365c565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b60006129a460148361365c565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b60006129e460398361365c565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f20756e7061757365000000000000006020830152604082019050919050565b6000612a4a60148361365c565b91507f54686520747869642068617320657869737465640000000000000000000000006000830152602082019050919050565b6000612a8a60228361365c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612af0601b8361365c565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000612b3060148361365c565b91507f41646a75737420726f6c652072657175697265640000000000000000000000006000830152602082019050919050565b6000612b70602e8361365c565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4275726e0000000000000000000000000000000000006020830152604082019050919050565b6000612bd660308361365c565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000612c3c600b8361366d565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612c7c60108361365c565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000612cbc60368361365c565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f7665206d696e74657220726f6c6520746f206d696e74000000000000000000006020830152604082019050919050565b6000612d22600b8361366d565b91507f4d494e5445525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612d6260218361365c565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612dc860258361365c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e2e602e8361365c565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4d696e740000000000000000000000000000000000006020830152604082019050919050565b6000612e9460248361365c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612efa60378361365c565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f2070617573650000000000000000006020830152604082019050919050565b6000612f60600b8361366d565b91507f41444a5553545f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612fa0600c8361366d565b91507f44454c495645525f524f4c4500000000000000000000000000000000000000006000830152600c82019050919050565b6000612fe0602f8361365c565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b6000613046601f8361365c565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6000613086602a8361365c565b91507f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008301527f696c6520706175736564000000000000000000000000000000000000000000006020830152604082019050919050565b6130e8816136c0565b82525050565b6130f7816136ca565b82525050565b60006131098284612707565b915081905092915050565b60006131208284612771565b915081905092915050565b600061313682612c2f565b9150819050919050565b600061314b82612d15565b9150819050919050565b600061316082612f53565b9150819050919050565b600061317582612f93565b9150819050919050565b6000602082019050613194600083018461262c565b92915050565b60006020820190506131af600083018461261d565b92915050565b600060208201905081810360008301526131cf818461263b565b905092915050565b60006020820190506131ec60008301846126b0565b92915050565b600060208201905061320760008301846126bf565b92915050565b6000602082019050818103600083015261322781846126ce565b905092915050565b60006020820190508181036000830152613248816127ff565b9050919050565b6000602082019050818103600083015261326881612865565b9050919050565b60006020820190508181036000830152613288816128cb565b9050919050565b600060208201905081810360008301526132a881612931565b9050919050565b600060208201905081810360008301526132c881612997565b9050919050565b600060208201905081810360008301526132e8816129d7565b9050919050565b6000602082019050818103600083015261330881612a3d565b9050919050565b6000602082019050818103600083015261332881612a7d565b9050919050565b6000602082019050818103600083015261334881612ae3565b9050919050565b6000602082019050818103600083015261336881612b23565b9050919050565b6000602082019050818103600083015261338881612b63565b9050919050565b600060208201905081810360008301526133a881612bc9565b9050919050565b600060208201905081810360008301526133c881612c6f565b9050919050565b600060208201905081810360008301526133e881612caf565b9050919050565b6000602082019050818103600083015261340881612d55565b9050919050565b6000602082019050818103600083015261342881612dbb565b9050919050565b6000602082019050818103600083015261344881612e21565b9050919050565b6000602082019050818103600083015261346881612e87565b9050919050565b6000602082019050818103600083015261348881612eed565b9050919050565b600060208201905081810360008301526134a881612fd3565b9050919050565b600060208201905081810360008301526134c881613039565b9050919050565b600060208201905081810360008301526134e881613079565b9050919050565b600060208201905061350460008301846130df565b92915050565b600060408201905061351f60008301856130df565b818103602083015261353181846126ce565b90509392505050565b600060608201905061354f60008301866130df565b818103602083015261356181856126ce565b9050818103604083015261357581846126ce565b9050949350505050565b600060208201905061359460008301846130ee565b92915050565b6000604051905081810181811067ffffffffffffffff821117156135bd57600080fd5b8060405250919050565b600067ffffffffffffffff8211156135de57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b60008190508160005260206000209050919050565b6000600a9050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613683826136a0565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006136e2826136e9565b9050919050565b60006136f4826136fb565b9050919050565b6000613706826136a0565b9050919050565b82818337600083830152505050565b60005b8381101561373a57808201518184015260208101905061371f565b83811115613749576000848401525b50505050565b6000601f19601f8301169050919050565b61376981613678565b811461377457600080fd5b50565b61378081613696565b811461378b57600080fd5b50565b613797816136c0565b81146137a257600080fd5b50565b80600660006101000a81548160ff021916908360ff1602179055505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b8fcec8f85b77ad2f9e3c4bad573a8afc9c92d70cab6551da9a4e843d9a70ffa64736f6c63430006020033",
  "sourceMap": "172:2103:0:-:0;;;413:2;391:24;;464:5;446:23;;493:5;475:23;;523:1;505:19;;;;;;;;;;;;;;;;;;;;679:214;8:9:-1;5:2;;;30:1;27;20:12;5:2;679:214:0;;;;;;;;;;;;;;;;;;;;;;;;780:4;786:6;1290:4:5;1296:6;2093:4:6;2085:5;:12;;;;;;;;;;;;:::i;:::-;;2117:6;2107:7;:16;;;;;;;;;;;;:::i;:::-;;2145:2;2133:9;;:14;;;;;;;;;;;;;;;;;;2013:141;;933:5:12;923:7;;:15;;;;;;;;;;;;;;;;;;1314:44:5::1;1762:4:3;1325:18:5::0;::::1;1345:12;:10;;;:12;;:::i;:::-;1314:10;;;:44;;:::i;:::-;1369:37;947:24;;;;;;;;;;;;;;1393:12;:10;;;:12;;:::i;:::-;1369:10;;;:37;;:::i;:::-;1416;1015:24;;;;;;;;;;;;;;1440:12;:10;;;:12;;:::i;:::-;1416:10;;;:37;;:::i;:::-;1223:237:::0;;808:31:0::1;829:9;;;;;;;;;;;808:20;;;;;:31;;:::i;:::-;849:37;256:24;;;;;;;;;;;;;;873:12;:10;;;:12;;:::i;:::-;849:10;;;:37;;:::i;:::-;679:214:::0;;172:2103;;590:104:2;643:15;677:10;670:17;;590:104;:::o;6578:110:3:-;6656:25;6667:4;6673:7;6656:10;;;:25;;:::i;:::-;6578:110;;:::o;10022:88:6:-;10094:9;10082;;:21;;;;;;;;;;;;;;;;;;10022:88;:::o;7015:184:3:-;7088:33;7113:7;7088:6;:12;7095:4;7088:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7084:109;;;7169:12;:10;;;:12;;:::i;:::-;7142:40;;7160:7;7142:40;;7154:4;7142:40;;;;;;;;;;7084:109;7015:184;;:::o;4864:141:11:-;4934:4;4957:41;4962:3;:10;;4990:5;4982:14;;4974:23;;4957:4;;;:41;;:::i;:::-;4950:48;;4864:141;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;;;:21;;:::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1732:23:11;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;3776:127::-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;172:2103:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:444:-1:-;;119:3;112:4;104:6;100:17;96:27;86:2;;137:1;134;127:12;86:2;167:6;161:13;189:65;204:49;246:6;204:49;;;189:65;;;180:74;;274:6;267:5;260:21;310:4;302:6;298:17;343:4;336:5;332:16;378:3;369:6;364:3;360:16;357:25;354:2;;;395:1;392;385:12;354:2;405:39;437:6;432:3;427;405:39;;;79:371;;;;;;;;458:597;;;610:2;598:9;589:7;585:23;581:32;578:2;;;626:1;623;616:12;578:2;682:1;671:9;667:17;661:24;705:18;697:6;694:30;691:2;;;737:1;734;727:12;691:2;757:74;823:7;814:6;803:9;799:22;757:74;;;747:84;;640:197;889:2;878:9;874:18;868:25;913:18;905:6;902:30;899:2;;;945:1;942;935:12;899:2;965:74;1031:7;1022:6;1011:9;1007:22;965:74;;;955:84;;847:198;572:483;;;;;;1063:347;;1241:85;1323:2;1318:3;1241:85;;;1234:92;;1359:13;1355:1;1350:3;1346:11;1339:34;1401:2;1396:3;1392:12;1385:19;;1227:183;;;;1419:347;;1597:85;1679:2;1674:3;1597:85;;;1590:92;;1715:13;1711:1;1706:3;1702:11;1695:34;1757:2;1752:3;1748:12;1741:19;;1583:183;;;;1775:347;;1953:85;2035:2;2030:3;1953:85;;;1946:92;;2071:13;2067:1;2062:3;2058:11;2051:34;2113:2;2108:3;2104:12;2097:19;;1939:183;;;;2130:372;;2329:148;2473:3;2329:148;;;2322:155;;2494:3;2487:10;;2310:192;;;;2509:372;;2708:148;2852:3;2708:148;;;2701:155;;2873:3;2866:10;;2689:192;;;;2888:372;;3087:148;3231:3;3087:148;;;3080:155;;3252:3;3245:10;;3068:192;;;;3267:256;;3329:2;3323:9;3313:19;;3367:4;3359:6;3355:17;3466:6;3454:10;3451:22;3430:18;3418:10;3415:34;3412:62;3409:2;;;3487:1;3484;3477:12;3409:2;3507:10;3503:2;3496:22;3307:216;;;;;3530:322;;3674:18;3666:6;3663:30;3660:2;;;3706:1;3703;3696:12;3660:2;3773:4;3769:9;3762:4;3754:6;3750:17;3746:33;3738:41;;3837:4;3831;3827:15;3819:23;;3597:255;;;;3860:145;;3996:3;3981:18;;3974:31;;;;;4014:268;4079:1;4086:101;4100:6;4097:1;4094:13;4086:101;;;4176:1;4171:3;4167:11;4161:18;4157:1;4152:3;4148:11;4141:39;4122:2;4119:1;4115:10;4110:15;;4086:101;;;4202:6;4199:1;4196:13;4193:2;;;4267:1;4258:6;4253:3;4249:16;4242:27;4193:2;4063:219;;;;;172:2103:0;;;;;;;",
  "deployedSourceMap": "172:2103:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;172:2103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:6;;;:::i;:::-;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;4881:317;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4272:112:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4634:223;;;;;;;;;;;;;;;;:::i;:::-;;3121:81:6;;;:::i;:::-;;;;;;;;;;;;;;;;900:774:0;;;;;;;;;;;;;;;;:::i;:::-;;5808:205:3;;;;;;;;;;;;;;;;:::i;:::-;;5593:215:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2430:175:5;;;:::i;:::-;;1649:202;;;;;;;;;;;;;;;;:::i;:::-;;481:89:7;;;;;;;;;;;;;;;;:::i;:::-;;1040:76:12;;;:::i;:::-;;;;;;;;;;;;;;;;2181:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;3418:117:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1680:253:0;;;;;;;;;;;;;;;;:::i;:::-;;876:290:7;;;;;;;;;;;;;;;;:::i;:::-;;2054:169:5;;;:::i;:::-;;3955:136:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2940:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2413:85:6;;;:::i;:::-;;;;;;;;;;;;;;;;1939:236:0;;;;;;;;;;;;;;;;:::i;:::-;;1717:49:3;;;:::i;:::-;;;;;;;;;;;;;;;;6295:266:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3738:172;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;218:62:0;;;:::i;:::-;;;;;;;;;;;;;;;;286:64;;;:::i;:::-;;;;;;;;;;;;;;;;3245:125:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;909:62:5;;;:::i;:::-;;;;;;;;;;;;;;;;5091:226:3;;;;;;;;;;;;;;;;:::i;:::-;;3968:149:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;977:62:5;;;:::i;:::-;;;;;;;;;;;;;;;;2219:81:6;2256:13;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;4410:4;4403:11;;4255:166;;;;:::o;3262:98::-;3315:7;3341:12;;3334:19;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;:11;:19;5092:6;5080:19;;;;;;;;;;;;;;;:33;5100:12;:10;:12::i;:::-;5080:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5049:8;:121::i;:::-;5187:4;5180:11;;4881:317;;;;;:::o;4272:112:3:-;4329:7;4355:6;:12;4362:4;4355:12;;;;;;;;;;;:22;;;4348:29;;4272:112;;;:::o;4634:223::-;4717:45;4725:6;:12;4732:4;4725:12;;;;;;;;;;;:22;;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;3121:81:6:-;3162:5;3186:9;;;;;;;;;;;3179:16;;3121:81;:::o;900:774:0:-;1071:7;;1061:6;:17;;1040:110;;;;;;;;;;;;;;;;;;;;;;1168:35;325:25;;;;;;;;;;;;;;1190:12;:10;:12::i;:::-;1168:7;:35::i;:::-;1160:81;;;;;;;;;;;;;;;;;;;;;;1256:9;1268:1;1256:13;;1251:244;1275:11;;1271:1;:15;1251:244;;;1424:4;1407:22;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1407:22:0;;;1397:33;;;;;;1359:9;1369:1;1359:12;;;;;;;;1342:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1342:30:0;;;1332:41;;;;;;:98;;1307:177;;;;;;;;;;;;;;;;;;;;;;1288:3;;;;;;;1251:244;;;;1504:17;1529:11;;1524:2;;:16;;;;;;1504:36;;1573:4;1550:9;1560;1550:20;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;1587:2;;:4;;;;;;;;;;;;;1601:20;1610:2;1614:6;1601:8;:20::i;:::-;;1644:2;1636:31;;;1648:6;1656:4;1662;1636:31;;;;;;;;;;;;;;;;;900:774;;;;;:::o;5808:205:3:-;5905:12;:10;:12::i;:::-;5894:23;;:7;:23;;;5886:83;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;:::-;5808:205;;:::o;5593:215:6:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;5729:25;;;;;;;;;;;;;;;:34;5755:7;5729:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5697:8;:83::i;:::-;5797:4;5790:11;;5593:215;;;;:::o;2430:175:5:-;2482:34;1015:24;;;;;;;;;;;;;;2503:12;:10;:12::i;:::-;2482:7;:34::i;:::-;2474:104;;;;;;;;;;;;;;;;;;;;;;2588:10;:8;:10::i;:::-;2430:175::o;1649:202::-;1724:34;947:24;;;;;;;;;;;;;;1745:12;:10;:12::i;:::-;1724:7;:34::i;:::-;1716:101;;;;;;;;;;;;;;;;;;;;;;1827:17;1833:2;1837:6;1827:5;:17::i;:::-;1649:202;;:::o;481:89:7:-;536:27;542:12;:10;:12::i;:::-;556:6;536:5;:27::i;:::-;481:89;:::o;1040:76:12:-;1079:4;1102:7;;;;;;;;;;;1095:14;;1040:76;:::o;2181:92:0:-;2221:17;;:::i;:::-;2257:9;2250:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:92;:::o;3418:117:6:-;3484:7;3510:9;:18;3520:7;3510:18;;;;;;;;;;;;;;;;3503:25;;3418:117;;;:::o;1680:253:0:-;1776:7;;1766:6;:17;;1745:110;;;;;;;;;;;;;;;;;;;;;;1865:18;1876:6;1865:10;:18::i;:::-;1903:10;1898:28;;;1915:6;1923:2;1898:28;;;;;;;;;;;;;;;;1680:253;;:::o;876:290:7:-;952:26;981:84;1018:6;981:84;;;;;;;;;;;;;;;;;:32;991:7;1000:12;:10;:12::i;:::-;981:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;952:113;;1076:51;1085:7;1094:12;:10;:12::i;:::-;1108:18;1076:8;:51::i;:::-;1137:22;1143:7;1152:6;1137:5;:22::i;:::-;876:290;;;:::o;2054:169:5:-;2104:34;1015:24;;;;;;;;;;;;;;2125:12;:10;:12::i;:::-;2104:7;:34::i;:::-;2096:102;;;;;;;;;;;;;;;;;;;;;;2208:8;:6;:8::i;:::-;2054:169::o;3955:136:3:-;4028:7;4054:30;4078:5;4054:6;:12;4061:4;4054:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4047:37;;3955:136;;;;:::o;2940:137::-;3009:4;3032:38;3062:7;3032:6;:12;3039:4;3032:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3025:45;;2940:137;;;;:::o;2413:85:6:-;2452:13;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:85;:::o;1939:236:0:-;2053:34;256:24;;;;;;;;;;;;;;2074:12;:10;:12::i;:::-;2053:7;:34::i;:::-;2045:67;;;;;;;;;;;;;;;;;;;;;;2132:8;2122:7;:18;;;;2160:8;2150:7;:18;;;;1939:236;;:::o;1717:49:3:-;1762:4;1717:49;;;:::o;6295:266:6:-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;6436:25;;;;;;;;;;;;;;;:34;6462:7;6436:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6404:8;:129::i;:::-;6550:4;6543:11;;6295:266;;;;:::o;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;:::-;3899:4;3892:11;;3738:172;;;;:::o;218:62:0:-;256:24;;;;;;;;;;;;;;218:62;:::o;286:64::-;325:25;;;;;;;;;;;;;;286:64;:::o;3245:125:3:-;3308:7;3334:29;:6;:12;3341:4;3334:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3327:36;;3245:125;;;:::o;909:62:5:-;947:24;;;;;;;;;;;;;;909:62;:::o;5091:226:3:-;5175:45;5183:6;:12;5190:4;5183:12;;;;;;;;;;;:22;;;5207:12;:10;:12::i;:::-;5175:7;:45::i;:::-;5167:106;;;;;;;;;;;;;;;;;;;;;;5284:26;5296:4;5302:7;5284:11;:26::i;:::-;5091:226;;:::o;3968:149:6:-;4057:7;4083:11;:18;4095:5;4083:18;;;;;;;;;;;;;;;:27;4102:7;4083:27;;;;;;;;;;;;;;;;4076:34;;3968:149;;;;:::o;977:62:5:-;1015:24;;;;;;;;;;;;;;977:62;:::o;590:104:2:-;643:15;677:10;670:17;;590:104;:::o;9359:340:6:-;9477:1;9460:19;;:5;:19;;;;9452:68;;;;;;;;;;;;;;;;;;;;;;9557:1;9538:21;;:7;:21;;;;9530:68;;;;;;;;;;;;;;;;;;;;;;9639:6;9609:11;:18;9621:5;9609:18;;;;;;;;;;;;;;;:27;9628:7;9609:27;;;;;;;;;;;;;;;:36;;;;9676:7;9660:32;;9669:5;9660:32;;;9685:6;9660:32;;;;;;;;;;;;;;;9359:340;;;:::o;7035:530::-;7158:1;7140:20;;:6;:20;;;;7132:70;;;;;;;;;;;;;;;;;;;;;;7241:1;7220:23;;:9;:23;;;;7212:71;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7352:9;:17;7362:6;7352:17;;;;;;;;;;;;;;;:91;;;;7476:32;7501:6;7476:9;:20;7486:9;7476:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;:55;;;;7540:9;7523:35;;7532:6;7523:35;;;7551:6;7523:35;;;;;;;;;;;;;;;7035:530;;;:::o;1746:187:4:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;7015:184:3:-;7088:33;7113:7;7088:6;:12;7095:4;7088:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;7142:40;;7160:7;7142:40;;7154:4;7142:40;;;;;;;;;;7084:109;7015:184;;:::o;7205:188::-;7279:36;7307:7;7279:6;:12;7286:4;7279:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;7336:40;;7354:7;7336:40;;7348:4;7336:40;;;;;;;;;;7275:112;7205:188;;:::o;874:176:4:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;2042:117:12:-;1610:7;;;;;;;;;;;1602:40;;;;;;;;;;;;;;;;;;;;;;2110:5:::1;2100:7;;:15;;;;;;;;;;;;;;;;;;2130:22;2139:12;:10;:12::i;:::-;2130:22;;;;;;;;;;;;;;;2042:117::o:0;7835:370:6:-;7937:1;7918:21;;:7;:21;;;;7910:65;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:24;8078:6;8061:12;;:16;;:24;;;;:::i;:::-;8046:12;:39;;;;8116:30;8139:6;8116:9;:18;8126:7;8116:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8095:9;:18;8105:7;8095:18;;;;;;;;;;;;;;;:51;;;;8182:7;8161:37;;8178:1;8161:37;;;8191:6;8161:37;;;;;;;;;;;;;;;7835:370;;:::o;8524:410::-;8626:1;8607:21;;:7;:21;;;;8599:67;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;:9;:18;8768:7;8758:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8737:9;:18;8747:7;8737:18;;;;;;;;;;;;;;;:89;;;;8851:24;8868:6;8851:12;;:16;;:24;;;;:::i;:::-;8836:12;:39;;;;8916:1;8890:37;;8899:7;8890:37;;;8920:6;8890:37;;;;;;;;;;;;;;;8524:410;;:::o;1795:115:12:-;1346:7;;;;;;;;;;;1345:8;1337:37;;;;;;;;;;;;;;;;;;;;;;1864:4:::1;1854:7;;:14;;;;;;;;;;;;;;;;;;1883:20;1890:12;:10;:12::i;:::-;1883:20;;;;;;;;;;;;;;;1795:115::o:0;6085:147:11:-;6159:7;6201:22;6205:3;:10;;6217:5;6201:3;:22::i;:::-;6193:31;;6178:47;;6085:147;;;;:::o;5401:156::-;5481:4;5504:46;5514:3;:10;;5542:5;5534:14;;5526:23;;5504:9;:46::i;:::-;5497:53;;5401:156;;;;:::o;5638:115::-;5701:7;5727:19;5735:3;:10;;5727:7;:19::i;:::-;5720:26;;5638:115;;;:::o;2611:181:5:-;2741:44;2768:4;2774:2;2778:6;2741:26;:44::i;:::-;2611:181;;;:::o;4864:141:11:-;4934:4;4957:41;4962:3;:10;;4990:5;4982:14;;4974:23;;4957:4;:41::i;:::-;4950:48;;4864:141;;;;:::o;5173:147::-;5246:4;5269:44;5277:3;:10;;5305:5;5297:14;;5289:23;;5269:7;:44::i;:::-;5262:51;;5173:147;;;;:::o;1321:134:4:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;4423:201:11:-;4490:7;4538:5;4517:3;:11;;:18;;;;:26;4509:73;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;3984:107::-;4040:7;4066:3;:11;;:18;;;;4059:25;;3984:107;;;:::o;582:234:8:-;690:44;717:4;723:2;727:6;690:26;:44::i;:::-;754:8;:6;:8::i;:::-;753:9;745:64;;;;;;;;;;;;;;;;;;;;;;582:234;;;:::o;1611:404:11:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1732:23:11;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;2183:1512::-;2249:4;2365:18;2386:3;:12;;:19;2399:5;2386:19;;;;;;;;;;;;2365:40;;2434:1;2420:10;:15;2416:1273;;2777:21;2814:1;2801:10;:14;2777:38;;2829:17;2870:1;2849:3;:11;;:18;;;;:22;2829:42;;3111:17;3131:3;:11;;3143:9;3131:22;;;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;:38;;;;3391:1;3375:13;:17;3349:3;:12;;:23;3362:9;3349:23;;;;;;;;;;;:43;;;;3498:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;2183:1512;;;;;:::o;10697:92:6:-;;;;:::o;172:2103:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:130;;222:6;209:20;200:29;;234:33;261:5;234:33;;;194:78;;;;;280:442;;382:3;375:4;367:6;363:17;359:27;349:2;;400:1;397;390:12;349:2;437:6;424:20;459:65;474:49;516:6;474:49;;;459:65;;;450:74;;544:6;537:5;530:21;580:4;572:6;568:17;613:4;606:5;602:16;648:3;639:6;634:3;630:16;627:25;624:2;;;665:1;662;655:12;624:2;675:41;709:6;704:3;699;675:41;;;342:380;;;;;;;;730:130;;810:6;797:20;788:29;;822:33;849:5;822:33;;;782:78;;;;;867:241;;971:2;959:9;950:7;946:23;942:32;939:2;;;987:1;984;977:12;939:2;1022:1;1039:53;1084:7;1075:6;1064:9;1060:22;1039:53;;;1029:63;;1001:97;933:175;;;;;1115:366;;;1236:2;1224:9;1215:7;1211:23;1207:32;1204:2;;;1252:1;1249;1242:12;1204:2;1287:1;1304:53;1349:7;1340:6;1329:9;1325:22;1304:53;;;1294:63;;1266:97;1394:2;1412:53;1457:7;1448:6;1437:9;1433:22;1412:53;;;1402:63;;1373:98;1198:283;;;;;;1488:491;;;;1626:2;1614:9;1605:7;1601:23;1597:32;1594:2;;;1642:1;1639;1632:12;1594:2;1677:1;1694:53;1739:7;1730:6;1719:9;1715:22;1694:53;;;1684:63;;1656:97;1784:2;1802:53;1847:7;1838:6;1827:9;1823:22;1802:53;;;1792:63;;1763:98;1892:2;1910:53;1955:7;1946:6;1935:9;1931:22;1910:53;;;1900:63;;1871:98;1588:391;;;;;;1986:366;;;2107:2;2095:9;2086:7;2082:23;2078:32;2075:2;;;2123:1;2120;2113:12;2075:2;2158:1;2175:53;2220:7;2211:6;2200:9;2196:22;2175:53;;;2165:63;;2137:97;2265:2;2283:53;2328:7;2319:6;2308:9;2304:22;2283:53;;;2273:63;;2244:98;2069:283;;;;;;2359:829;;;;;2534:3;2522:9;2513:7;2509:23;2505:33;2502:2;;;2551:1;2548;2541:12;2502:2;2586:1;2603:53;2648:7;2639:6;2628:9;2624:22;2603:53;;;2593:63;;2565:97;2693:2;2711:53;2756:7;2747:6;2736:9;2732:22;2711:53;;;2701:63;;2672:98;2829:2;2818:9;2814:18;2801:32;2853:18;2845:6;2842:30;2839:2;;;2885:1;2882;2875:12;2839:2;2905:63;2960:7;2951:6;2940:9;2936:22;2905:63;;;2895:73;;2780:194;3033:2;3022:9;3018:18;3005:32;3057:18;3049:6;3046:30;3043:2;;;3089:1;3086;3079:12;3043:2;3109:63;3164:7;3155:6;3144:9;3140:22;3109:63;;;3099:73;;2984:194;2496:692;;;;;;;;3195:241;;3299:2;3287:9;3278:7;3274:23;3270:32;3267:2;;;3315:1;3312;3305:12;3267:2;3350:1;3367:53;3412:7;3403:6;3392:9;3388:22;3367:53;;;3357:63;;3329:97;3261:175;;;;;3443:366;;;3564:2;3552:9;3543:7;3539:23;3535:32;3532:2;;;3580:1;3577;3570:12;3532:2;3615:1;3632:53;3677:7;3668:6;3657:9;3653:22;3632:53;;;3622:63;;3594:97;3722:2;3740:53;3785:7;3776:6;3765:9;3761:22;3740:53;;;3730:63;;3701:98;3526:283;;;;;;3816:366;;;3937:2;3925:9;3916:7;3912:23;3908:32;3905:2;;;3953:1;3950;3943:12;3905:2;3988:1;4005:53;4050:7;4041:6;4030:9;4026:22;4005:53;;;3995:63;;3967:97;4095:2;4113:53;4158:7;4149:6;4138:9;4134:22;4113:53;;;4103:63;;4074:98;3899:283;;;;;;4189:241;;4293:2;4281:9;4272:7;4268:23;4264:32;4261:2;;;4309:1;4306;4299:12;4261:2;4344:1;4361:53;4406:7;4397:6;4386:9;4382:22;4361:53;;;4351:63;;4323:97;4255:175;;;;;4437:472;;;4568:2;4556:9;4547:7;4543:23;4539:32;4536:2;;;4584:1;4581;4574:12;4536:2;4619:1;4636:53;4681:7;4672:6;4661:9;4657:22;4636:53;;;4626:63;;4598:97;4754:2;4743:9;4739:18;4726:32;4778:18;4770:6;4767:30;4764:2;;;4810:1;4807;4800:12;4764:2;4830:63;4885:7;4876:6;4865:9;4861:22;4830:63;;;4820:73;;4705:194;4530:379;;;;;;4916:366;;;5037:2;5025:9;5016:7;5012:23;5008:32;5005:2;;;5053:1;5050;5043:12;5005:2;5088:1;5105:53;5150:7;5141:6;5130:9;5126:22;5105:53;;;5095:63;;5067:97;5195:2;5213:53;5258:7;5249:6;5238:9;5234:22;5213:53;;;5203:63;;5174:98;4999:283;;;;;;5290:181;;5403:62;5461:3;5453:6;5403:62;;;5389:76;;5382:89;;;;;5479:142;5570:45;5609:5;5570:45;;;5565:3;5558:58;5552:69;;;5628:113;5711:24;5729:5;5711:24;;;5706:3;5699:37;5693:48;;;5781:890;;5936:59;5989:5;5936:59;;;6008:91;6092:6;6087:3;6008:91;;;6001:98;;6122:3;6164:4;6156:6;6152:17;6147:3;6143:27;6191:61;6246:5;6191:61;;;6272:7;6300:1;6285:347;6310:6;6307:1;6304:13;6285:347;;;6372:9;6366:4;6362:20;6357:3;6350:33;6417:6;6411:13;6439:76;6510:4;6495:13;6439:76;;;6431:84;;6532:65;6590:6;6532:65;;;6522:75;;6620:4;6615:3;6611:14;6604:21;;6342:290;6332:1;6329;6325:9;6320:14;;6285:347;;;6289:14;6645:4;6638:11;;6662:3;6655:10;;5915:756;;;;;;;;;;6679:104;6756:21;6771:5;6756:21;;;6751:3;6744:34;6738:45;;;6790:113;6873:24;6891:5;6873:24;;;6868:3;6861:37;6855:48;;;6910:347;;7022:39;7055:5;7022:39;;;7073:71;7137:6;7132:3;7073:71;;;7066:78;;7149:52;7194:6;7189:3;7182:4;7175:5;7171:16;7149:52;;;7222:29;7244:6;7222:29;;;7217:3;7213:39;7206:46;;7002:255;;;;;;7264:360;;7394:39;7427:5;7394:39;;;7445:89;7527:6;7522:3;7445:89;;;7438:96;;7539:52;7584:6;7579:3;7572:4;7565:5;7561:16;7539:52;;;7612:6;7607:3;7603:16;7596:23;;7374:250;;;;;;7631:319;;7729:35;7758:5;7729:35;;;7776:61;7830:6;7825:3;7776:61;;;7769:68;;7842:52;7887:6;7882:3;7875:4;7868:5;7864:16;7842:52;;;7915:29;7937:6;7915:29;;;7910:3;7906:39;7899:46;;7709:241;;;;;;7982:884;;8119:5;8113:12;8153:1;8142:9;8138:17;8166:1;8161:268;;;;8440:1;8435:425;;;;8131:729;;8161:268;8239:4;8235:1;8224:9;8220:17;8216:28;8258:89;8340:6;8335:3;8258:89;;;8251:96;;8385:4;8381:9;8370;8366:25;8361:3;8354:38;8415:6;8410:3;8406:16;8399:23;;8168:261;8161:268;;8435:425;8504:1;8493:9;8489:17;8520:89;8602:6;8597:3;8520:89;;;8513:96;;8631:38;8663:5;8631:38;;;8685:1;8693:130;8707:6;8704:1;8701:13;8693:130;;;8772:7;8766:14;8762:1;8757:3;8753:11;8746:35;8813:1;8804:7;8800:15;8789:26;;8729:4;8726:1;8722:12;8717:17;;8693:130;;;8846:6;8841:3;8837:16;8830:23;;8442:418;;;8131:729;;8089:777;;;;;;8875:370;;9035:67;9099:2;9094:3;9035:67;;;9028:74;;9135:34;9131:1;9126:3;9122:11;9115:55;9204:3;9199:2;9194:3;9190:12;9183:25;9236:2;9231:3;9227:12;9220:19;;9021:224;;;;9254:371;;9414:67;9478:2;9473:3;9414:67;;;9407:74;;9514:34;9510:1;9505:3;9501:11;9494:55;9583:4;9578:2;9573:3;9569:12;9562:26;9616:2;9611:3;9607:12;9600:19;;9400:225;;;;9634:372;;9794:67;9858:2;9853:3;9794:67;;;9787:74;;9894:34;9890:1;9885:3;9881:11;9874:55;9963:5;9958:2;9953:3;9949:12;9942:27;9997:2;9992:3;9988:12;9981:19;;9780:226;;;;10015:384;;10175:67;10239:2;10234:3;10175:67;;;10168:74;;10275:34;10271:1;10266:3;10262:11;10255:55;10344:17;10339:2;10334:3;10330:12;10323:39;10390:2;10385:3;10381:12;10374:19;;10161:238;;;;10408:320;;10568:67;10632:2;10627:3;10568:67;;;10561:74;;10668:22;10664:1;10659:3;10655:11;10648:43;10719:2;10714:3;10710:12;10703:19;;10554:174;;;;10737:394;;10897:67;10961:2;10956:3;10897:67;;;10890:74;;10997:34;10993:1;10988:3;10984:11;10977:55;11066:27;11061:2;11056:3;11052:12;11045:49;11122:2;11117:3;11113:12;11106:19;;10883:248;;;;11140:320;;11300:67;11364:2;11359:3;11300:67;;;11293:74;;11400:22;11396:1;11391:3;11387:11;11380:43;11451:2;11446:3;11442:12;11435:19;;11286:174;;;;11469:371;;11629:67;11693:2;11688:3;11629:67;;;11622:74;;11729:34;11725:1;11720:3;11716:11;11709:55;11798:4;11793:2;11788:3;11784:12;11777:26;11831:2;11826:3;11822:12;11815:19;;11615:225;;;;11849:327;;12009:67;12073:2;12068:3;12009:67;;;12002:74;;12109:29;12105:1;12100:3;12096:11;12089:50;12167:2;12162:3;12158:12;12151:19;;11995:181;;;;12185:320;;12345:67;12409:2;12404:3;12345:67;;;12338:74;;12445:22;12441:1;12436:3;12432:11;12425:43;12496:2;12491:3;12487:12;12480:19;;12331:174;;;;12514:383;;12674:67;12738:2;12733:3;12674:67;;;12667:74;;12774:34;12770:1;12765:3;12761:11;12754:55;12843:16;12838:2;12833:3;12829:12;12822:38;12888:2;12883:3;12879:12;12872:19;;12660:237;;;;12906:385;;13066:67;13130:2;13125:3;13066:67;;;13059:74;;13166:34;13162:1;13157:3;13153:11;13146:55;13235:18;13230:2;13225:3;13221:12;13214:40;13282:2;13277:3;13273:12;13266:19;;13052:239;;;;13300:347;;13478:85;13560:2;13555:3;13478:85;;;13471:92;;13596:13;13592:1;13587:3;13583:11;13576:34;13638:2;13633:3;13629:12;13622:19;;13464:183;;;;13656:316;;13816:67;13880:2;13875:3;13816:67;;;13809:74;;13916:18;13912:1;13907:3;13903:11;13896:39;13963:2;13958:3;13954:12;13947:19;;13802:170;;;;13981:391;;14141:67;14205:2;14200:3;14141:67;;;14134:74;;14241:34;14237:1;14232:3;14228:11;14221:55;14310:24;14305:2;14300:3;14296:12;14289:46;14363:2;14358:3;14354:12;14347:19;;14127:245;;;;14381:347;;14559:85;14641:2;14636:3;14559:85;;;14552:92;;14677:13;14673:1;14668:3;14664:11;14657:34;14719:2;14714:3;14710:12;14703:19;;14545:183;;;;14737:370;;14897:67;14961:2;14956:3;14897:67;;;14890:74;;14997:34;14993:1;14988:3;14984:11;14977:55;15066:3;15061:2;15056:3;15052:12;15045:25;15098:2;15093:3;15089:12;15082:19;;14883:224;;;;15116:374;;15276:67;15340:2;15335:3;15276:67;;;15269:74;;15376:34;15372:1;15367:3;15363:11;15356:55;15445:7;15440:2;15435:3;15431:12;15424:29;15481:2;15476:3;15472:12;15465:19;;15262:228;;;;15499:383;;15659:67;15723:2;15718:3;15659:67;;;15652:74;;15759:34;15755:1;15750:3;15746:11;15739:55;15828:16;15823:2;15818:3;15814:12;15807:38;15873:2;15868:3;15864:12;15857:19;;15645:237;;;;15891:373;;16051:67;16115:2;16110:3;16051:67;;;16044:74;;16151:34;16147:1;16142:3;16138:11;16131:55;16220:6;16215:2;16210:3;16206:12;16199:28;16255:2;16250:3;16246:12;16239:19;;16037:227;;;;16273:392;;16433:67;16497:2;16492:3;16433:67;;;16426:74;;16533:34;16529:1;16524:3;16520:11;16513:55;16602:25;16597:2;16592:3;16588:12;16581:47;16656:2;16651:3;16647:12;16640:19;;16419:246;;;;16674:347;;16852:85;16934:2;16929:3;16852:85;;;16845:92;;16970:13;16966:1;16961:3;16957:11;16950:34;17012:2;17007:3;17003:12;16996:19;;16838:183;;;;17030:348;;17208:85;17290:2;17285:3;17208:85;;;17201:92;;17326:14;17322:1;17317:3;17313:11;17306:35;17369:2;17364:3;17360:12;17353:19;;17194:184;;;;17387:384;;17547:67;17611:2;17606:3;17547:67;;;17540:74;;17647:34;17643:1;17638:3;17634:11;17627:55;17716:17;17711:2;17706:3;17702:12;17695:39;17762:2;17757:3;17753:12;17746:19;;17533:238;;;;17780:331;;17940:67;18004:2;17999:3;17940:67;;;17933:74;;18040:33;18036:1;18031:3;18027:11;18020:54;18102:2;18097:3;18093:12;18086:19;;17926:185;;;;18120:379;;18280:67;18344:2;18339:3;18280:67;;;18273:74;;18380:34;18376:1;18371:3;18367:11;18360:55;18449:12;18444:2;18439:3;18435:12;18428:34;18490:2;18485:3;18481:12;18474:19;;18266:233;;;;18507:113;18590:24;18608:5;18590:24;;;18585:3;18578:37;18572:48;;;18627:107;18706:22;18722:5;18706:22;;;18701:3;18694:35;18688:46;;;18741:266;;18887:95;18978:3;18969:6;18887:95;;;18880:102;;18999:3;18992:10;;18868:139;;;;;19014:260;;19157:92;19245:3;19236:6;19157:92;;;19150:99;;19266:3;19259:10;;19138:136;;;;;19281:372;;19480:148;19624:3;19480:148;;;19473:155;;19645:3;19638:10;;19461:192;;;;19660:372;;19859:148;20003:3;19859:148;;;19852:155;;20024:3;20017:10;;19840:192;;;;20039:372;;20238:148;20382:3;20238:148;;;20231:155;;20403:3;20396:10;;20219:192;;;;20418:372;;20617:148;20761:3;20617:148;;;20610:155;;20782:3;20775:10;;20598:192;;;;20797:213;;20915:2;20904:9;20900:18;20892:26;;20929:71;20997:1;20986:9;20982:17;20973:6;20929:71;;;20886:124;;;;;21017:229;;21143:2;21132:9;21128:18;21120:26;;21157:79;21233:1;21222:9;21218:17;21209:6;21157:79;;;21114:132;;;;;21253:381;;21431:2;21420:9;21416:18;21408:26;;21481:9;21475:4;21471:20;21467:1;21456:9;21452:17;21445:47;21506:118;21619:4;21610:6;21506:118;;;21498:126;;21402:232;;;;;21641:201;;21753:2;21742:9;21738:18;21730:26;;21767:65;21829:1;21818:9;21814:17;21805:6;21767:65;;;21724:118;;;;;21849:213;;21967:2;21956:9;21952:18;21944:26;;21981:71;22049:1;22038:9;22034:17;22025:6;21981:71;;;21938:124;;;;;22069:301;;22207:2;22196:9;22192:18;22184:26;;22257:9;22251:4;22247:20;22243:1;22232:9;22228:17;22221:47;22282:78;22355:4;22346:6;22282:78;;;22274:86;;22178:192;;;;;22377:407;;22568:2;22557:9;22553:18;22545:26;;22618:9;22612:4;22608:20;22604:1;22593:9;22589:17;22582:47;22643:131;22769:4;22643:131;;;22635:139;;22539:245;;;;22791:407;;22982:2;22971:9;22967:18;22959:26;;23032:9;23026:4;23022:20;23018:1;23007:9;23003:17;22996:47;23057:131;23183:4;23057:131;;;23049:139;;22953:245;;;;23205:407;;23396:2;23385:9;23381:18;23373:26;;23446:9;23440:4;23436:20;23432:1;23421:9;23417:17;23410:47;23471:131;23597:4;23471:131;;;23463:139;;23367:245;;;;23619:407;;23810:2;23799:9;23795:18;23787:26;;23860:9;23854:4;23850:20;23846:1;23835:9;23831:17;23824:47;23885:131;24011:4;23885:131;;;23877:139;;23781:245;;;;24033:407;;24224:2;24213:9;24209:18;24201:26;;24274:9;24268:4;24264:20;24260:1;24249:9;24245:17;24238:47;24299:131;24425:4;24299:131;;;24291:139;;24195:245;;;;24447:407;;24638:2;24627:9;24623:18;24615:26;;24688:9;24682:4;24678:20;24674:1;24663:9;24659:17;24652:47;24713:131;24839:4;24713:131;;;24705:139;;24609:245;;;;24861:407;;25052:2;25041:9;25037:18;25029:26;;25102:9;25096:4;25092:20;25088:1;25077:9;25073:17;25066:47;25127:131;25253:4;25127:131;;;25119:139;;25023:245;;;;25275:407;;25466:2;25455:9;25451:18;25443:26;;25516:9;25510:4;25506:20;25502:1;25491:9;25487:17;25480:47;25541:131;25667:4;25541:131;;;25533:139;;25437:245;;;;25689:407;;25880:2;25869:9;25865:18;25857:26;;25930:9;25924:4;25920:20;25916:1;25905:9;25901:17;25894:47;25955:131;26081:4;25955:131;;;25947:139;;25851:245;;;;26103:407;;26294:2;26283:9;26279:18;26271:26;;26344:9;26338:4;26334:20;26330:1;26319:9;26315:17;26308:47;26369:131;26495:4;26369:131;;;26361:139;;26265:245;;;;26517:407;;26708:2;26697:9;26693:18;26685:26;;26758:9;26752:4;26748:20;26744:1;26733:9;26729:17;26722:47;26783:131;26909:4;26783:131;;;26775:139;;26679:245;;;;26931:407;;27122:2;27111:9;27107:18;27099:26;;27172:9;27166:4;27162:20;27158:1;27147:9;27143:17;27136:47;27197:131;27323:4;27197:131;;;27189:139;;27093:245;;;;27345:407;;27536:2;27525:9;27521:18;27513:26;;27586:9;27580:4;27576:20;27572:1;27561:9;27557:17;27550:47;27611:131;27737:4;27611:131;;;27603:139;;27507:245;;;;27759:407;;27950:2;27939:9;27935:18;27927:26;;28000:9;27994:4;27990:20;27986:1;27975:9;27971:17;27964:47;28025:131;28151:4;28025:131;;;28017:139;;27921:245;;;;28173:407;;28364:2;28353:9;28349:18;28341:26;;28414:9;28408:4;28404:20;28400:1;28389:9;28385:17;28378:47;28439:131;28565:4;28439:131;;;28431:139;;28335:245;;;;28587:407;;28778:2;28767:9;28763:18;28755:26;;28828:9;28822:4;28818:20;28814:1;28803:9;28799:17;28792:47;28853:131;28979:4;28853:131;;;28845:139;;28749:245;;;;29001:407;;29192:2;29181:9;29177:18;29169:26;;29242:9;29236:4;29232:20;29228:1;29217:9;29213:17;29206:47;29267:131;29393:4;29267:131;;;29259:139;;29163:245;;;;29415:407;;29606:2;29595:9;29591:18;29583:26;;29656:9;29650:4;29646:20;29642:1;29631:9;29627:17;29620:47;29681:131;29807:4;29681:131;;;29673:139;;29577:245;;;;29829:407;;30020:2;30009:9;30005:18;29997:26;;30070:9;30064:4;30060:20;30056:1;30045:9;30041:17;30034:47;30095:131;30221:4;30095:131;;;30087:139;;29991:245;;;;30243:407;;30434:2;30423:9;30419:18;30411:26;;30484:9;30478:4;30474:20;30470:1;30459:9;30455:17;30448:47;30509:131;30635:4;30509:131;;;30501:139;;30405:245;;;;30657:407;;30848:2;30837:9;30833:18;30825:26;;30898:9;30892:4;30888:20;30884:1;30873:9;30869:17;30862:47;30923:131;31049:4;30923:131;;;30915:139;;30819:245;;;;31071:407;;31262:2;31251:9;31247:18;31239:26;;31312:9;31306:4;31302:20;31298:1;31287:9;31283:17;31276:47;31337:131;31463:4;31337:131;;;31329:139;;31233:245;;;;31485:213;;31603:2;31592:9;31588:18;31580:26;;31617:71;31685:1;31674:9;31670:17;31661:6;31617:71;;;31574:124;;;;;31705:412;;31871:2;31860:9;31856:18;31848:26;;31885:71;31953:1;31942:9;31938:17;31929:6;31885:71;;;32004:9;31998:4;31994:20;31989:2;31978:9;31974:18;31967:48;32029:78;32102:4;32093:6;32029:78;;;32021:86;;31842:275;;;;;;32124:611;;32338:2;32327:9;32323:18;32315:26;;32352:71;32420:1;32409:9;32405:17;32396:6;32352:71;;;32471:9;32465:4;32461:20;32456:2;32445:9;32441:18;32434:48;32496:78;32569:4;32560:6;32496:78;;;32488:86;;32622:9;32616:4;32612:20;32607:2;32596:9;32592:18;32585:48;32647:78;32720:4;32711:6;32647:78;;;32639:86;;32309:426;;;;;;;32742:205;;32856:2;32845:9;32841:18;32833:26;;32870:67;32934:1;32923:9;32919:17;32910:6;32870:67;;;32827:120;;;;;32954:256;;33016:2;33010:9;33000:19;;33054:4;33046:6;33042:17;33153:6;33141:10;33138:22;33117:18;33105:10;33102:34;33099:62;33096:2;;;33174:1;33171;33164:12;33096:2;33194:10;33190:2;33183:22;32994:216;;;;;33217:322;;33361:18;33353:6;33350:30;33347:2;;;33393:1;33390;33383:12;33347:2;33460:4;33456:9;33449:4;33441:6;33437:17;33433:33;33425:41;;33524:4;33518;33514:15;33506:23;;33284:255;;;;33546:104;;33637:3;33629:11;;33623:27;;;;33657:158;;33725:3;33717:11;;33762:3;33759:1;33752:14;33794:4;33791:1;33781:18;33773:26;;33711:104;;;;33822:115;;33923:4;33913:14;;33901:36;;;;33944:118;;34034:5;34028:12;34018:22;;33999:63;;;;34069:122;;34163:5;34157:12;34147:22;;34128:63;;;;34198:113;;34301:4;34296:3;34292:14;34284:22;;34278:33;;;;34319:147;;34457:3;34442:18;;34435:31;;;;;34475:153;;34580:6;34575:3;34568:19;34617:4;34612:3;34608:14;34593:29;;34561:67;;;;;34637:163;;34752:6;34747:3;34740:19;34789:4;34784:3;34780:14;34765:29;;34733:67;;;;;34809:145;;34945:3;34930:18;;34923:31;;;;;34962:91;;35024:24;35042:5;35024:24;;;35013:35;;35007:46;;;;35060:85;;35133:5;35126:13;35119:21;35108:32;;35102:43;;;;35152:72;;35214:5;35203:16;;35197:27;;;;35231:121;;35304:42;35297:5;35293:54;35282:65;;35276:76;;;;35359:72;;35421:5;35410:16;;35404:27;;;;35438:81;;35509:4;35502:5;35498:16;35487:27;;35481:38;;;;35526:129;;35613:37;35644:5;35613:37;;;35600:50;;35594:61;;;;35662:121;;35741:37;35772:5;35741:37;;;35728:50;;35722:61;;;;35790:108;;35869:24;35887:5;35869:24;;;35856:37;;35850:48;;;;35906:145;35987:6;35982:3;35977;35964:30;36043:1;36034:6;36029:3;36025:16;36018:27;35957:94;;;;36060:268;36125:1;36132:101;36146:6;36143:1;36140:13;36132:101;;;36222:1;36217:3;36213:11;36207:18;36203:1;36198:3;36194:11;36187:39;36168:2;36165:1;36161:10;36156:15;;36132:101;;;36248:6;36245:1;36242:13;36239:2;;;36313:1;36304:6;36299:3;36295:16;36288:27;36239:2;36109:219;;;;;36336:97;;36424:2;36420:7;36415:2;36408:5;36404:14;36400:28;36390:38;;36384:49;;;;36441:117;36510:24;36528:5;36510:24;;;36503:5;36500:35;36490:2;;36549:1;36546;36539:12;36490:2;36484:74;;36565:117;36634:24;36652:5;36634:24;;;36627:5;36624:35;36614:2;;36673:1;36670;36663:12;36614:2;36608:74;;36689:117;36758:24;36776:5;36758:24;;;36751:5;36748:35;36738:2;;36797:1;36794;36787:12;36738:2;36732:74;;10022:88:6;10094:9;10082;;:21;;;;;;;;;;;;;;;;;;10022:88;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.21 <0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\";\n\ncontract GXC is ERC20PresetMinterPauser {\n    bytes32 public constant ADJUST_ROLE = keccak256(\"ADJUST_ROLE\");\n    bytes32 public constant DELIVER_ROLE = keccak256(\"DELIVER_ROLE\");\n\n    string[10] private txidArray;\n    uint256 arrayLength = 10;\n    uint256 private id;\n\n    uint256 minMint = 50000;\n    uint256 minBurn = 50000;\n\n    uint8 decimals_ = 5;\n\n    event DELIVER(address indexed to, uint256 amount, string from, string txid);\n\n    event Burn(address indexed from, uint256 amount, string to);\n\n    constructor(string memory name, string memory symbol)\n        public\n        ERC20PresetMinterPauser(name, symbol)\n    {\n        super._setupDecimals(decimals_);\n        _setupRole(ADJUST_ROLE, _msgSender());\n    }\n\n\n    function deliver(\n        address to,\n        uint256 amount,\n        string memory from,\n        string memory txid\n    ) public {\n        require(\n            amount >= minMint,\n            \"The minimum value must be greater than minMint\"\n        );\n        require(hasRole(DELIVER_ROLE, _msgSender()), \"Must have deliver role to deliver\");\n        for (uint256 i = 0; i < arrayLength; i++) {\n            require(\n                keccak256(abi.encodePacked(txidArray[i])) !=\n                    keccak256(abi.encodePacked(txid)),\n                \"The txid has existed\"\n            );\n        }\n        uint256 id_number = id % arrayLength;\n        txidArray[id_number] = txid;\n        id++;\n        transfer(to, amount);\n        emit DELIVER(to, amount, from, txid);\n    }\n\n    function burn(uint256 amount, string memory to) public {\n        require(\n            amount >= minBurn,\n            \"The minimum value must be greater than minBurn\"\n        );\n        super.burn(amount);\n        emit Burn(msg.sender, amount, to);\n    }\n\n    function adjustMinNumber(uint256 _burnMin, uint256 _mintMin)\n        public\n        virtual\n    {\n        require(hasRole(ADJUST_ROLE, _msgSender()), \"Adjust role required\");\n        minMint = _mintMin;\n        minBurn = _burnMin;\n    }\n\n    function getTxidArray() public returns (string[10] memory) {\n        return txidArray;\n    }\n}\n",
  "sourcePath": "/Users/bijianing/gxc-solidity/contracts/GXC.sol",
  "ast": {
    "absolutePath": "/Users/bijianing/gxc-solidity/contracts/GXC.sol",
    "exportedSymbols": {
      "GXC": [
        225
      ]
    },
    "id": 226,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 874,
        "src": "101:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 873,
              "src": "188:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$873",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "188:23:0"
          }
        ],
        "contractDependencies": [
          285,
          555,
          873,
          1361,
          1414,
          1449,
          1518,
          2175
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 225,
        "linearizedBaseContracts": [
          225,
          873,
          1449,
          2175,
          1414,
          1361,
          1518,
          555,
          285
        ],
        "name": "GXC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "b0ab3968",
            "id": 10,
            "name": "ADJUST_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "218:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "41444a5553545f524f4c45",
                  "id": 8,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "266:13:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  },
                  "value": "ADJUST_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  }
                ],
                "id": 7,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "256:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "256:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "b10fe704",
            "id": 15,
            "name": "DELIVER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "286:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "44454c495645525f524f4c45",
                  "id": 13,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "335:14:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f62058b7b4feae3d8708f12c15f6252ed834fde2d9f6d96109e2400d98770aeb",
                    "typeString": "literal_string \"DELIVER_ROLE\""
                  },
                  "value": "DELIVER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f62058b7b4feae3d8708f12c15f6252ed834fde2d9f6d96109e2400d98770aeb",
                    "typeString": "literal_string \"DELIVER_ROLE\""
                  }
                ],
                "id": 12,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "325:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "325:25:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "txidArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "357:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$10_storage",
              "typeString": "string[10]"
            },
            "typeName": {
              "baseType": {
                "id": 16,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "357:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 18,
              "length": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 17,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "364:2:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "357:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                "typeString": "string[10]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "name": "arrayLength",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "391:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "391:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "name": "id",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "421:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "421:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "name": "minMint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "446:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "446:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "464:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 30,
            "name": "minBurn",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "475:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "475:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "493:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 33,
            "name": "decimals_",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "505:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 31,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "505:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "523:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 43,
            "name": "DELIVER",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "545:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "565:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "581:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "594:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:62:0"
            },
            "src": "531:76:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 51,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 51,
                  "src": "624:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 51,
                  "src": "646:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 51,
                  "src": "662:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "623:49:0"
            },
            "src": "613:60:0"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "798:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "829:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "808:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$225",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setupDecimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1350,
                      "src": "808:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "808:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "ADJUST_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "860:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 70,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "873:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "873:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 68,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "849:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "849:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 58,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "780:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "786:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 60,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 873,
                  "src": "756:23:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$873_$",
                    "typeString": "type(contract ERC20PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "756:37:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 75,
                  "src": "691:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 75,
                  "src": "711:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "690:42:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:0:0"
            },
            "scope": 225,
            "src": "679:214:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1030:644:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1061:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "minMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1071:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1061:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4d696e74",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        },
                        "value": "The minimum value must be greater than minMint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1040:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "DELIVER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1176:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 96,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "1190:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1190:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 94,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "1168:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1168:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420686176652064656c6976657220726f6c6520746f2064656c69766572",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1205:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_013c044fd0120a74bf02200babd8243fc542503e7f280c2c309dbba69d5f8393",
                          "typeString": "literal_string \"Must have deliver role to deliver\""
                        },
                        "value": "Must have deliver role to deliver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_013c044fd0120a74bf02200babd8243fc542503e7f280c2c309dbba69d5f8393",
                          "typeString": "literal_string \"Must have deliver role to deliver\""
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1160:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:81:0"
                },
                {
                  "body": {
                    "id": 131,
                    "nodeType": "Block",
                    "src": "1293:202:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 116,
                                          "name": "txidArray",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19,
                                          "src": "1359:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                                            "typeString": "string storage ref[10] storage ref"
                                          }
                                        },
                                        "id": 118,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 117,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 103,
                                          "src": "1369:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1359:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 114,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1342:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1342:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 113,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1332:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1332:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 124,
                                        "name": "txid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 83,
                                        "src": "1424:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 122,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1407:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 123,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1407:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1407:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 121,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1397:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1397:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1332:98:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652074786964206861732065786973746564",
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1448:22:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              },
                              "value": "The txid has existed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              }
                            ],
                            "id": 112,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1307:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1307:177:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1307:177:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1271:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1275:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1271:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 132,
                  "initializationExpression": {
                    "assignments": [
                      103
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 103,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 132,
                        "src": "1256:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1256:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 105,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1268:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1256:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1288:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1288:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 111,
                    "nodeType": "ExpressionStatement",
                    "src": "1288:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1251:244:0"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "name": "id_number",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 160,
                      "src": "1504:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1504:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 135,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1524:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1529:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1504:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "txidArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1550:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                          "typeString": "string storage ref[10] storage ref"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "id_number",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "1560:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1550:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "txid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1573:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1550:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1587:4:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1587:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:4:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1610:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1614:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 148,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "1601:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1601:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:20:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1644:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1648:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1656:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "txid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1662:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153,
                      "name": "DELIVER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1636:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "EmitStatement",
                  "src": "1631:36:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "34d4d1ac",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deliver",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "926:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "946:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "970:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "998:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "916:106:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:0:0"
            },
            "scope": 225,
            "src": "900:774:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1735:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "1766:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "minBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1776:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1766:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4275726e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1797:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        },
                        "value": "The minimum value must be greater than minBurn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1745:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 178,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1876:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1865:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$225",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1381,
                      "src": "1865:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "1865:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1903:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1903:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1915:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1923:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 181,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1898:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "EmitStatement",
                  "src": "1893:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7641e6f3",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "1694:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "1710:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1693:34:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1735:0:0"
            },
            "scope": 225,
            "src": "1680:253:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "2035:140:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "ADJUST_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2061:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 199,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "2074:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2074:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 197,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "2053:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2053:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646a75737420726f6c65207265717569726564",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2089:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        },
                        "value": "Adjust role required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2045:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2045:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "minMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2122:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 206,
                      "name": "_mintMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "2132:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2122:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "minBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2150:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 210,
                      "name": "_burnMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "2160:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2150:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:18:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9b308f9e",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustMinNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "_burnMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 214,
                  "src": "1964:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "name": "_mintMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 214,
                  "src": "1982:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:36:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2035:0:0"
            },
            "scope": 225,
            "src": "1939:236:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2240:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 221,
                    "name": "txidArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "2257:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                      "typeString": "string storage ref[10] storage ref"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "2250:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6210ee85",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxidArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2202:2:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 224,
                  "src": "2221:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$10_memory_ptr",
                    "typeString": "string[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 216,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2221:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 218,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2228:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2221:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                      "typeString": "string[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2220:19:0"
            },
            "scope": 225,
            "src": "2181:92:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 226,
        "src": "172:2103:0"
      }
    ],
    "src": "33:2243:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bijianing/gxc-solidity/contracts/GXC.sol",
    "exportedSymbols": {
      "GXC": [
        225
      ]
    },
    "id": 226,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 874,
        "src": "101:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 873,
              "src": "188:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$873",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "188:23:0"
          }
        ],
        "contractDependencies": [
          285,
          555,
          873,
          1361,
          1414,
          1449,
          1518,
          2175
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 225,
        "linearizedBaseContracts": [
          225,
          873,
          1449,
          2175,
          1414,
          1361,
          1518,
          555,
          285
        ],
        "name": "GXC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "b0ab3968",
            "id": 10,
            "name": "ADJUST_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "218:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "41444a5553545f524f4c45",
                  "id": 8,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "266:13:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  },
                  "value": "ADJUST_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  }
                ],
                "id": 7,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "256:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "256:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "b10fe704",
            "id": 15,
            "name": "DELIVER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "286:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "44454c495645525f524f4c45",
                  "id": 13,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "335:14:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f62058b7b4feae3d8708f12c15f6252ed834fde2d9f6d96109e2400d98770aeb",
                    "typeString": "literal_string \"DELIVER_ROLE\""
                  },
                  "value": "DELIVER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f62058b7b4feae3d8708f12c15f6252ed834fde2d9f6d96109e2400d98770aeb",
                    "typeString": "literal_string \"DELIVER_ROLE\""
                  }
                ],
                "id": 12,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "325:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "325:25:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "txidArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "357:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$10_storage",
              "typeString": "string[10]"
            },
            "typeName": {
              "baseType": {
                "id": 16,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "357:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 18,
              "length": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 17,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "364:2:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "357:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                "typeString": "string[10]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "name": "arrayLength",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "391:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "391:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "name": "id",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "421:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "421:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "name": "minMint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "446:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "446:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "464:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 30,
            "name": "minBurn",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "475:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "475:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "493:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 33,
            "name": "decimals_",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 225,
            "src": "505:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 31,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "505:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "523:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 43,
            "name": "DELIVER",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "545:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "565:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "581:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "594:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:62:0"
            },
            "src": "531:76:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 51,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 51,
                  "src": "624:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 51,
                  "src": "646:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 51,
                  "src": "662:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "623:49:0"
            },
            "src": "613:60:0"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "798:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "829:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "808:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$225",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setupDecimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1350,
                      "src": "808:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "808:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "ADJUST_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "860:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 70,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "873:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "873:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 68,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "849:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "849:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 58,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "780:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "786:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 60,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 873,
                  "src": "756:23:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$873_$",
                    "typeString": "type(contract ERC20PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "756:37:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 75,
                  "src": "691:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 75,
                  "src": "711:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "690:42:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:0:0"
            },
            "scope": 225,
            "src": "679:214:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1030:644:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1061:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "minMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1071:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1061:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4d696e74",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        },
                        "value": "The minimum value must be greater than minMint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1040:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "DELIVER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1176:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 96,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "1190:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1190:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 94,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "1168:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1168:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420686176652064656c6976657220726f6c6520746f2064656c69766572",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1205:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_013c044fd0120a74bf02200babd8243fc542503e7f280c2c309dbba69d5f8393",
                          "typeString": "literal_string \"Must have deliver role to deliver\""
                        },
                        "value": "Must have deliver role to deliver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_013c044fd0120a74bf02200babd8243fc542503e7f280c2c309dbba69d5f8393",
                          "typeString": "literal_string \"Must have deliver role to deliver\""
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1160:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:81:0"
                },
                {
                  "body": {
                    "id": 131,
                    "nodeType": "Block",
                    "src": "1293:202:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 116,
                                          "name": "txidArray",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19,
                                          "src": "1359:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                                            "typeString": "string storage ref[10] storage ref"
                                          }
                                        },
                                        "id": 118,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 117,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 103,
                                          "src": "1369:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1359:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 114,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1342:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1342:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 113,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1332:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1332:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 124,
                                        "name": "txid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 83,
                                        "src": "1424:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 122,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1407:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 123,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1407:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1407:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 121,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1397:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1397:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1332:98:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652074786964206861732065786973746564",
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1448:22:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              },
                              "value": "The txid has existed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              }
                            ],
                            "id": 112,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1307:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1307:177:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1307:177:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1271:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1275:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1271:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 132,
                  "initializationExpression": {
                    "assignments": [
                      103
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 103,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 132,
                        "src": "1256:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1256:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 105,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1268:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1256:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1288:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1288:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 111,
                    "nodeType": "ExpressionStatement",
                    "src": "1288:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1251:244:0"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "name": "id_number",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 160,
                      "src": "1504:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1504:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 135,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1524:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1529:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1504:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "txidArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1550:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                          "typeString": "string storage ref[10] storage ref"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "id_number",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "1560:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1550:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "txid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1573:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1550:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1587:4:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1587:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:4:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1610:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1614:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 148,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "1601:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1601:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:20:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1644:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1648:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1656:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "txid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1662:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153,
                      "name": "DELIVER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1636:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "EmitStatement",
                  "src": "1631:36:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "34d4d1ac",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deliver",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "926:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "946:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "970:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 161,
                  "src": "998:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "916:106:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:0:0"
            },
            "scope": 225,
            "src": "900:774:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1735:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "1766:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "minBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1776:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1766:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4275726e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1797:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        },
                        "value": "The minimum value must be greater than minBurn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1745:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 178,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1876:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1865:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$225",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1381,
                      "src": "1865:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "1865:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1903:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1903:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1915:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1923:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 181,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1898:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "EmitStatement",
                  "src": "1893:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7641e6f3",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "1694:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 189,
                  "src": "1710:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1693:34:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1735:0:0"
            },
            "scope": 225,
            "src": "1680:253:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "2035:140:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "ADJUST_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2061:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 199,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "2074:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2074:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 197,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "2053:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2053:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646a75737420726f6c65207265717569726564",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2089:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        },
                        "value": "Adjust role required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2045:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2045:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "minMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2122:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 206,
                      "name": "_mintMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "2132:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2122:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "minBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2150:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 210,
                      "name": "_burnMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "2160:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2150:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:18:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9b308f9e",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustMinNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "_burnMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 214,
                  "src": "1964:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "name": "_mintMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 214,
                  "src": "1982:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:36:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2035:0:0"
            },
            "scope": 225,
            "src": "1939:236:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2240:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 221,
                    "name": "txidArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "2257:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                      "typeString": "string storage ref[10] storage ref"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "2250:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6210ee85",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxidArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2202:2:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 224,
                  "src": "2221:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$10_memory_ptr",
                    "typeString": "string[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 216,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2221:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 218,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2228:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2221:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                      "typeString": "string[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2220:19:0"
            },
            "scope": 225,
            "src": "2181:92:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 226,
        "src": "172:2103:0"
      }
    ],
    "src": "33:2243:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x47e772fda56eb54ab211642ce5421882c49fc2b7033455982af14588ae4207ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "to",
              "type": "string"
            }
          ],
          "name": "Burn",
          "type": "event"
        },
        "0xf2cbb0418e3132958dca4cc2e9ab525cf64488dfc7c0eaa45cdeb6c42b30490a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "txid",
              "type": "string"
            }
          ],
          "name": "Mint",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0xdb647366180c7f298da5d34c14b9bb2822ef90bcc27e74c130a6de9072aaa872": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "txid",
              "type": "string"
            }
          ],
          "name": "DELIVER",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x34FF72caC19eB55cB532f85160e0c555f612b36C",
      "transactionHash": "0x828c34d0ae29488568c95c0724f81971b5eea79af75da51ca40c116257e8699c"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-24T11:37:02.606Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}