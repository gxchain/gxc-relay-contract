{
  "contractName": "GXC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "to",
          "type": "string"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "txid",
          "type": "string"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADJUST_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "txid",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "to",
          "type": "string"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_burnMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintMin",
          "type": "uint256"
        }
      ],
      "name": "adjustMinNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTxidArray",
      "outputs": [
        {
          "internalType": "string[10]",
          "name": "",
          "type": "string[10]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"txid\",\"type\":\"string\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADJUST_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintMin\",\"type\":\"uint256\"}],\"name\":\"adjustMinNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTxidArray\",\"outputs\":[{\"internalType\":\"string[10]\",\"name\":\"\",\"type\":\"string[10]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"txid\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/bijianing/gxc-solidity/contracts/GXC.sol\":\"GXC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bijianing/gxc-solidity/contracts/GXC.sol\":{\"keccak256\":\"0x777a8ac67b3b4edf7e0c589bdcf5c13b2bcf419d82cd744b6e952590f5f0e8ad\",\"urls\":[\"bzz-raw://2f44f11b8454ddf3072e0a891479085c931398292035c00cc814de1014b00cda\",\"dweb:/ipfs/Qme6oizqSp7LyszGyorvsawto2qGYRGsBUX86Cj2ADoo8e\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc\",\"urls\":[\"bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf\",\"dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb\",\"urls\":[\"bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0\",\"dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb\",\"urls\":[\"bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c\",\"dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149\",\"urls\":[\"bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459\",\"dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x6080604052600a60115561c35060135561c3506014556005601560006101000a81548160ff021916908360ff1602179055503480156200003e57600080fd5b5060405162003de438038062003de4833981810160405262000064919081019062000487565b818181818160049080519060200190620000809291906200037c565b508060059080519060200190620000999291906200037c565b506012600660006101000a81548160ff021916908360ff16021790555050506000600660016101000a81548160ff021916908315150217905550620000f76000801b620000eb620001c860201b60201c565b620001d060201b60201c565b6200012d6040516200010990620005d7565b604051809103902062000121620001c860201b60201c565b620001d060201b60201c565b620001636040516200013f90620005c0565b604051809103902062000157620001c860201b60201c565b620001d060201b60201c565b50506200018a601560009054906101000a900460ff16620001e660201b620036261760201c565b620001c06040516200019c90620005ee565b6040518091039020620001b4620001c860201b60201c565b620001d060201b60201c565b5050620006a1565b600033905090565b620001e282826200020460201b60201c565b5050565b80600660006101000a81548160ff021916908360ff16021790555050565b6200023281600080858152602001908152602001600020600001620002a760201b62001e281790919060201c565b15620002a35762000248620001c860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002d7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620002df60201b60201c565b905092915050565b6000620002f383836200035960201b60201c565b6200034e57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000353565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003bf57805160ff1916838001178555620003f0565b82800160010185558215620003f0579182015b82811115620003ef578251825591602001919060010190620003d2565b5b509050620003ff919062000403565b5090565b6200042891905b80821115620004245760008160009055506001016200040a565b5090565b90565b600082601f8301126200043d57600080fd5b8151620004546200044e8262000633565b62000605565b915080825260208301602083018583830111156200047157600080fd5b6200047e8382846200066b565b50505092915050565b600080604083850312156200049b57600080fd5b600083015167ffffffffffffffff811115620004b657600080fd5b620004c4858286016200042b565b925050602083015167ffffffffffffffff811115620004e257600080fd5b620004f0858286016200042b565b9150509250929050565b600062000509600b8362000660565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b60006200054b600b8362000660565b91507f4d494e5445525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b60006200058d600b8362000660565b91507f41444a5553545f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000620005cd82620004fa565b9150819050919050565b6000620005e4826200053c565b9150819050919050565b6000620005fb826200057e565b9150819050919050565b6000604051905081810181811067ffffffffffffffff821117156200062957600080fd5b8060405250919050565b600067ffffffffffffffff8211156200064b57600080fd5b601f19601f8301169050602081019050919050565b600081905092915050565b60005b838110156200068b5780820151818401526020810190506200066e565b838111156200069b576000848401525b50505050565b61373380620006b16000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637641e6f31161010f578063a457c2d7116100a2578063d539139311610071578063d5391393146105b9578063d547741f146105d7578063dd62ed3e146105f3578063e63ab1e914610623576101f0565b8063a457c2d71461050b578063a9059cbb1461053b578063b0ab39681461056b578063ca15c87314610589576101f0565b806391d14854116100de57806391d148541461048357806395d89b41146104b35780639b308f9e146104d1578063a217fddf146104ed576101f0565b80637641e6f31461041157806379cc67901461042d5780638456cb59146104495780639010d07c14610453576101f0565b806336568abe1161018757806342966c681161015657806342966c68146103895780635c975abb146103a55780636210ee85146103c357806370a08231146103e1576101f0565b806336568abe1461031757806339509351146103335780633f4ba83a1461036357806340c10f191461036d576101f0565b8063248a9ca3116101c3578063248a9ca3146102915780632f2ff15d146102c15780632fb102cf146102dd578063313ce567146102f9576101f0565b806306fdde03146101f5578063095ea7b31461021357806318160ddd1461024357806323b872dd14610261575b600080fd5b6101fd610641565b60405161020a91906130ae565b60405180910390f35b61022d6004803603610228919081019061233c565b6106e3565b60405161023a9190613078565b60405180910390f35b61024b610701565b6040516102589190613370565b60405180910390f35b61027b600480360361027691908101906122ed565b61070b565b6040516102889190613078565b60405180910390f35b6102ab60048036036102a6919081019061240b565b6107e4565b6040516102b89190613093565b60405180910390f35b6102db60048036036102d69190810190612434565b610803565b005b6102f760048036036102f29190810190612378565b610876565b005b610301610a1f565b60405161030e9190613400565b60405180910390f35b610331600480360361032c9190810190612434565b610a36565b005b61034d6004803603610348919081019061233c565b610ab9565b60405161035a9190613078565b60405180910390f35b61036b610b6c565b005b6103876004803603610382919081019061233c565b610bd9565b005b6103a3600480360361039e91908101906124ac565b610c4a565b005b6103ad610c5e565b6040516103ba9190613078565b60405180910390f35b6103cb610c75565b6040516103d89190613056565b60405180910390f35b6103fb60048036036103f69190810190612288565b610d52565b6040516104089190613370565b60405180910390f35b61042b600480360361042691908101906124d5565b610d9b565b005b6104476004803603610442919081019061233c565b610e3d565b005b610451610e9f565b005b61046d60048036036104689190810190612470565b610f0c565b60405161047a9190613020565b60405180910390f35b61049d60048036036104989190810190612434565b610f3d565b6040516104aa9190613078565b60405180910390f35b6104bb610f6e565b6040516104c891906130ae565b60405180910390f35b6104eb60048036036104e69190810190612529565b611010565b005b6104f5611085565b6040516105029190613093565b60405180910390f35b6105256004803603610520919081019061233c565b61108c565b6040516105329190613078565b60405180910390f35b6105556004803603610550919081019061233c565b611159565b6040516105629190613078565b60405180910390f35b610573611177565b6040516105809190613093565b60405180910390f35b6105a3600480360361059e919081019061240b565b61118e565b6040516105b09190613370565b60405180910390f35b6105c16111b4565b6040516105ce9190613093565b60405180910390f35b6105f160048036036105ec9190810190612434565b6111cb565b005b61060d600480360361060891908101906122b1565b61123e565b60405161061a9190613370565b60405180910390f35b61062b6112c5565b6040516106389190613093565b60405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d95780601f106106ae576101008083540402835291602001916106d9565b820191906000526020600020905b8154815290600101906020018083116106bc57829003601f168201915b5050505050905090565b60006106f76106f06112dc565b84846112e4565b6001905092915050565b6000600354905090565b60006107188484846114af565b6107d9846107246112dc565b6107d48560405180606001604052806028815260200161368d60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061078a6112dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b6112e4565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610829600080848152602001908152602001600020600201546108246112dc565b610f3d565b610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90613110565b60405180910390fd5b61087282826117a3565b5050565b6013548310156108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b2906132b0565b60405180910390fd5b60008090505b60115481101561097457816040516020016108dc9190612fb3565b60405160208183030381529060405280519060200120600782600a81106108ff57fe5b016040516020016109109190612fca565b604051602081830303815290604052805190602001201415610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90613170565b60405180910390fd5b80806001019150506108c1565b5060006011546012548161098457fe5b06905081600782600a811061099557fe5b0190805190602001906109a9929190612128565b506012600081548092919060010191905055506109c68585610bd9565b8473ffffffffffffffffffffffffffffffffffffffff167ff2cbb0418e3132958dca4cc2e9ab525cf64488dfc7c0eaa45cdeb6c42b30490a858585604051610a10939291906133bb565b60405180910390a25050505050565b6000600660009054906101000a900460ff16905090565b610a3e6112dc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa290613310565b60405180910390fd5b610ab58282611836565b5050565b6000610b62610ac66112dc565b84610b5d8560026000610ad76112dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c990919063ffffffff16565b6112e4565b6001905092915050565b610b90604051610b7b90612fe1565b6040518091039020610b8b6112dc565b610f3d565b610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc690613150565b60405180910390fd5b610bd761191e565b565b610bfd604051610be890612ff6565b6040518091039020610bf86112dc565b610f3d565b610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390613250565b60405180910390fd5b610c4682826119c8565b5050565b610c5b610c556112dc565b82611b5e565b50565b6000600660019054906101000a900460ff16905090565b610c7d6121a8565b6007600a80602002604051908101604052809291906000905b82821015610d49578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d355780601f10610d0a57610100808354040283529160200191610d35565b820191906000526020600020905b815481529060010190602001808311610d1857829003601f168201915b505050505081526020019060010190610c96565b50505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b601454821015610de0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd7906131f0565b60405180910390fd5b610de982610c4a565b3373ffffffffffffffffffffffffffffffffffffffff167f47e772fda56eb54ab211642ce5421882c49fc2b7033455982af14588ae4207ff8383604051610e3192919061338b565b60405180910390a25050565b6000610e7c826040518060600160405280602481526020016136b560249139610e6d86610e686112dc565b61123e565b6117489092919063ffffffff16565b9050610e9083610e8a6112dc565b836112e4565b610e9a8383611b5e565b505050565b610ec3604051610eae90612fe1565b6040518091039020610ebe6112dc565b610f3d565b610f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef9906132f0565b60405180910390fd5b610f0a611d0e565b565b6000610f3582600080868152602001908152602001600020600001611db990919063ffffffff16565b905092915050565b6000610f6682600080868152602001908152602001600020600001611dd390919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110065780601f10610fdb57610100808354040283529160200191611006565b820191906000526020600020905b815481529060010190602001808311610fe957829003601f168201915b5050505050905090565b61103460405161101f9061300b565b604051809103902061102f6112dc565b610f3d565b611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a906131d0565b60405180910390fd5b80601381905550816014819055505050565b6000801b81565b600061114f6110996112dc565b8461114a856040518060600160405280602581526020016136d960259139600260006110c36112dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b6112e4565b6001905092915050565b600061116d6111666112dc565b84846114af565b6001905092915050565b6040516111839061300b565b604051809103902081565b60006111ad600080848152602001908152602001600020600001611e03565b9050919050565b6040516111c090612ff6565b604051809103902081565b6111f1600080848152602001908152602001600020600201546111ec6112dc565b610f3d565b611230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122790613210565b60405180910390fd5b61123a8282611836565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040516112d190612fe1565b604051809103902081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b906132d0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bb90613190565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516114a29190613370565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561151f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151690613290565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561158f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611586906130f0565b60405180910390fd5b61159a838383611e18565b6116068160405180606001604052806026815260200161366760269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061169b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161173b9190613370565b60405180910390a3505050565b6000838311158290611790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178791906130ae565b60405180910390fd5b5060008385039050809150509392505050565b6117ca81600080858152602001908152602001600020600001611e2890919063ffffffff16565b15611832576117d76112dc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61185d81600080858152602001908152602001600020600001611e5890919063ffffffff16565b156118c55761186a6112dc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015611914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190b906131b0565b60405180910390fd5b8091505092915050565b600660019054906101000a900460ff1661196d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196490613130565b60405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6119b16112dc565b6040516119be919061303b565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2f90613330565b60405180910390fd5b611a4460008383611e18565b611a59816003546118c990919063ffffffff16565b600381905550611ab181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b529190613370565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc590613270565b60405180910390fd5b611bda82600083611e18565b611c468160405180606001604052806022815260200161364560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c9e81600354611e8890919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d029190613370565b60405180910390a35050565b600660019054906101000a900460ff1615611d5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5590613230565b60405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611da26112dc565b604051611daf919061303b565b60405180910390a1565b6000611dc88360000183611ed2565b60001c905092915050565b6000611dfb836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611f3f565b905092915050565b6000611e1182600001611f62565b9050919050565b611e23838383611f73565b505050565b6000611e50836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611fcb565b905092915050565b6000611e80836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61203b565b905092915050565b6000611eca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611748565b905092915050565b600081836000018054905011611f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f14906130d0565b60405180910390fd5b826000018281548110611f2c57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b611f7e838383612123565b611f86610c5e565b15611fc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbd90613350565b60405180910390fd5b505050565b6000611fd78383611f3f565b612030578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612035565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114612117576000600182039050600060018660000180549050039050600086600001828154811061208657fe5b90600052602060002001549050808760000184815481106120a357fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806120db57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061211d565b60009150505b92915050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061216957805160ff1916838001178555612197565b82800160010185558215612197579182015b8281111561219657825182559160200191906001019061217b565b5b5090506121a491906121d0565b5090565b604051806101400160405280600a905b60608152602001906001900390816121b85790505090565b6121f291905b808211156121ee5760008160009055506001016121d6565b5090565b90565b600081359050612204816135e1565b92915050565b600081359050612219816135f8565b92915050565b600082601f83011261223057600080fd5b813561224361223e82613448565b61341b565b9150808252602083016020830185838301111561225f57600080fd5b61226a83828461358e565b50505092915050565b6000813590506122828161360f565b92915050565b60006020828403121561229a57600080fd5b60006122a8848285016121f5565b91505092915050565b600080604083850312156122c457600080fd5b60006122d2858286016121f5565b92505060206122e3858286016121f5565b9150509250929050565b60008060006060848603121561230257600080fd5b6000612310868287016121f5565b9350506020612321868287016121f5565b925050604061233286828701612273565b9150509250925092565b6000806040838503121561234f57600080fd5b600061235d858286016121f5565b925050602061236e85828601612273565b9150509250929050565b6000806000806080858703121561238e57600080fd5b600061239c878288016121f5565b94505060206123ad87828801612273565b935050604085013567ffffffffffffffff8111156123ca57600080fd5b6123d68782880161221f565b925050606085013567ffffffffffffffff8111156123f357600080fd5b6123ff8782880161221f565b91505092959194509250565b60006020828403121561241d57600080fd5b600061242b8482850161220a565b91505092915050565b6000806040838503121561244757600080fd5b60006124558582860161220a565b9250506020612466858286016121f5565b9150509250929050565b6000806040838503121561248357600080fd5b60006124918582860161220a565b92505060206124a285828601612273565b9150509250929050565b6000602082840312156124be57600080fd5b60006124cc84828501612273565b91505092915050565b600080604083850312156124e857600080fd5b60006124f685828601612273565b925050602083013567ffffffffffffffff81111561251357600080fd5b61251f8582860161221f565b9150509250929050565b6000806040838503121561253c57600080fd5b600061254a85828601612273565b925050602061255b85828601612273565b9150509250929050565b60006125718383612694565b905092915050565b61258281613558565b82525050565b612591816134f9565b82525050565b60006125a282613493565b6125ac81856134c1565b9350836020820285016125be85613474565b8060005b858110156125fa57848403895281516125db8582612565565b94506125e6836134b4565b925060208a019950506001810190506125c2565b50829750879550505050505092915050565b6126158161350b565b82525050565b61262481613517565b82525050565b6000612635826134a9565b61263f81856134dd565b935061264f81856020860161359d565b612658816135d0565b840191505092915050565b600061266e826134a9565b61267881856134ee565b935061268881856020860161359d565b80840191505092915050565b600061269f8261349e565b6126a981856134cc565b93506126b981856020860161359d565b6126c2816135d0565b840191505092915050565b6000815460018116600081146126ea576001811461270f57612753565b607f60028304166126fb81876134ee565b955060ff1983168652808601935050612753565b6002820461271d81876134ee565b95506127288561347e565b60005b8281101561274a5781548189015260018201915060208101905061272b565b82880195505050505b505092915050565b60006127686022836134dd565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127ce6023836134dd565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612834602f836134dd565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b600061289a6014836134dd565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b60006128da6039836134dd565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f20756e7061757365000000000000006020830152604082019050919050565b60006129406014836134dd565b91507f54686520747869642068617320657869737465640000000000000000000000006000830152602082019050919050565b60006129806022836134dd565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129e6601b836134dd565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000612a266014836134dd565b91507f41646a75737420726f6c652072657175697265640000000000000000000000006000830152602082019050919050565b6000612a66602e836134dd565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4275726e0000000000000000000000000000000000006020830152604082019050919050565b6000612acc6030836134dd565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000612b32600b836134ee565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612b726010836134dd565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000612bb26036836134dd565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f7665206d696e74657220726f6c6520746f206d696e74000000000000000000006020830152604082019050919050565b6000612c18600b836134ee565b91507f4d494e5445525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612c586021836134dd565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612cbe6025836134dd565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d24602e836134dd565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4d696e740000000000000000000000000000000000006020830152604082019050919050565b6000612d8a6024836134dd565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612df06037836134dd565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f2070617573650000000000000000006020830152604082019050919050565b6000612e56600b836134ee565b91507f41444a5553545f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612e96602f836134dd565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b6000612efc601f836134dd565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6000612f3c602a836134dd565b91507f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008301527f696c6520706175736564000000000000000000000000000000000000000000006020830152604082019050919050565b612f9e81613541565b82525050565b612fad8161354b565b82525050565b6000612fbf8284612663565b915081905092915050565b6000612fd682846126cd565b915081905092915050565b6000612fec82612b25565b9150819050919050565b600061300182612c0b565b9150819050919050565b600061301682612e49565b9150819050919050565b60006020820190506130356000830184612588565b92915050565b60006020820190506130506000830184612579565b92915050565b600060208201905081810360008301526130708184612597565b905092915050565b600060208201905061308d600083018461260c565b92915050565b60006020820190506130a8600083018461261b565b92915050565b600060208201905081810360008301526130c8818461262a565b905092915050565b600060208201905081810360008301526130e98161275b565b9050919050565b60006020820190508181036000830152613109816127c1565b9050919050565b6000602082019050818103600083015261312981612827565b9050919050565b600060208201905081810360008301526131498161288d565b9050919050565b60006020820190508181036000830152613169816128cd565b9050919050565b6000602082019050818103600083015261318981612933565b9050919050565b600060208201905081810360008301526131a981612973565b9050919050565b600060208201905081810360008301526131c9816129d9565b9050919050565b600060208201905081810360008301526131e981612a19565b9050919050565b6000602082019050818103600083015261320981612a59565b9050919050565b6000602082019050818103600083015261322981612abf565b9050919050565b6000602082019050818103600083015261324981612b65565b9050919050565b6000602082019050818103600083015261326981612ba5565b9050919050565b6000602082019050818103600083015261328981612c4b565b9050919050565b600060208201905081810360008301526132a981612cb1565b9050919050565b600060208201905081810360008301526132c981612d17565b9050919050565b600060208201905081810360008301526132e981612d7d565b9050919050565b6000602082019050818103600083015261330981612de3565b9050919050565b6000602082019050818103600083015261332981612e89565b9050919050565b6000602082019050818103600083015261334981612eef565b9050919050565b6000602082019050818103600083015261336981612f2f565b9050919050565b60006020820190506133856000830184612f95565b92915050565b60006040820190506133a06000830185612f95565b81810360208301526133b2818461262a565b90509392505050565b60006060820190506133d06000830186612f95565b81810360208301526133e2818561262a565b905081810360408301526133f6818461262a565b9050949350505050565b60006020820190506134156000830184612fa4565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561343e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561345f57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b60008190508160005260206000209050919050565b6000600a9050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061350482613521565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006135638261356a565b9050919050565b60006135758261357c565b9050919050565b600061358782613521565b9050919050565b82818337600083830152505050565b60005b838110156135bb5780820151818401526020810190506135a0565b838111156135ca576000848401525b50505050565b6000601f19601f8301169050919050565b6135ea816134f9565b81146135f557600080fd5b50565b61360181613517565b811461360c57600080fd5b50565b61361881613541565b811461362357600080fd5b50565b80600660006101000a81548160ff021916908360ff1602179055505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122078d529c74aad8155fb809629ab473a403e909adacd1c0b64166de4f7d3808dd164736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80637641e6f31161010f578063a457c2d7116100a2578063d539139311610071578063d5391393146105b9578063d547741f146105d7578063dd62ed3e146105f3578063e63ab1e914610623576101f0565b8063a457c2d71461050b578063a9059cbb1461053b578063b0ab39681461056b578063ca15c87314610589576101f0565b806391d14854116100de57806391d148541461048357806395d89b41146104b35780639b308f9e146104d1578063a217fddf146104ed576101f0565b80637641e6f31461041157806379cc67901461042d5780638456cb59146104495780639010d07c14610453576101f0565b806336568abe1161018757806342966c681161015657806342966c68146103895780635c975abb146103a55780636210ee85146103c357806370a08231146103e1576101f0565b806336568abe1461031757806339509351146103335780633f4ba83a1461036357806340c10f191461036d576101f0565b8063248a9ca3116101c3578063248a9ca3146102915780632f2ff15d146102c15780632fb102cf146102dd578063313ce567146102f9576101f0565b806306fdde03146101f5578063095ea7b31461021357806318160ddd1461024357806323b872dd14610261575b600080fd5b6101fd610641565b60405161020a91906130ae565b60405180910390f35b61022d6004803603610228919081019061233c565b6106e3565b60405161023a9190613078565b60405180910390f35b61024b610701565b6040516102589190613370565b60405180910390f35b61027b600480360361027691908101906122ed565b61070b565b6040516102889190613078565b60405180910390f35b6102ab60048036036102a6919081019061240b565b6107e4565b6040516102b89190613093565b60405180910390f35b6102db60048036036102d69190810190612434565b610803565b005b6102f760048036036102f29190810190612378565b610876565b005b610301610a1f565b60405161030e9190613400565b60405180910390f35b610331600480360361032c9190810190612434565b610a36565b005b61034d6004803603610348919081019061233c565b610ab9565b60405161035a9190613078565b60405180910390f35b61036b610b6c565b005b6103876004803603610382919081019061233c565b610bd9565b005b6103a3600480360361039e91908101906124ac565b610c4a565b005b6103ad610c5e565b6040516103ba9190613078565b60405180910390f35b6103cb610c75565b6040516103d89190613056565b60405180910390f35b6103fb60048036036103f69190810190612288565b610d52565b6040516104089190613370565b60405180910390f35b61042b600480360361042691908101906124d5565b610d9b565b005b6104476004803603610442919081019061233c565b610e3d565b005b610451610e9f565b005b61046d60048036036104689190810190612470565b610f0c565b60405161047a9190613020565b60405180910390f35b61049d60048036036104989190810190612434565b610f3d565b6040516104aa9190613078565b60405180910390f35b6104bb610f6e565b6040516104c891906130ae565b60405180910390f35b6104eb60048036036104e69190810190612529565b611010565b005b6104f5611085565b6040516105029190613093565b60405180910390f35b6105256004803603610520919081019061233c565b61108c565b6040516105329190613078565b60405180910390f35b6105556004803603610550919081019061233c565b611159565b6040516105629190613078565b60405180910390f35b610573611177565b6040516105809190613093565b60405180910390f35b6105a3600480360361059e919081019061240b565b61118e565b6040516105b09190613370565b60405180910390f35b6105c16111b4565b6040516105ce9190613093565b60405180910390f35b6105f160048036036105ec9190810190612434565b6111cb565b005b61060d600480360361060891908101906122b1565b61123e565b60405161061a9190613370565b60405180910390f35b61062b6112c5565b6040516106389190613093565b60405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d95780601f106106ae576101008083540402835291602001916106d9565b820191906000526020600020905b8154815290600101906020018083116106bc57829003601f168201915b5050505050905090565b60006106f76106f06112dc565b84846112e4565b6001905092915050565b6000600354905090565b60006107188484846114af565b6107d9846107246112dc565b6107d48560405180606001604052806028815260200161368d60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061078a6112dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b6112e4565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610829600080848152602001908152602001600020600201546108246112dc565b610f3d565b610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90613110565b60405180910390fd5b61087282826117a3565b5050565b6013548310156108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b2906132b0565b60405180910390fd5b60008090505b60115481101561097457816040516020016108dc9190612fb3565b60405160208183030381529060405280519060200120600782600a81106108ff57fe5b016040516020016109109190612fca565b604051602081830303815290604052805190602001201415610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90613170565b60405180910390fd5b80806001019150506108c1565b5060006011546012548161098457fe5b06905081600782600a811061099557fe5b0190805190602001906109a9929190612128565b506012600081548092919060010191905055506109c68585610bd9565b8473ffffffffffffffffffffffffffffffffffffffff167ff2cbb0418e3132958dca4cc2e9ab525cf64488dfc7c0eaa45cdeb6c42b30490a858585604051610a10939291906133bb565b60405180910390a25050505050565b6000600660009054906101000a900460ff16905090565b610a3e6112dc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa290613310565b60405180910390fd5b610ab58282611836565b5050565b6000610b62610ac66112dc565b84610b5d8560026000610ad76112dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c990919063ffffffff16565b6112e4565b6001905092915050565b610b90604051610b7b90612fe1565b6040518091039020610b8b6112dc565b610f3d565b610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc690613150565b60405180910390fd5b610bd761191e565b565b610bfd604051610be890612ff6565b6040518091039020610bf86112dc565b610f3d565b610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390613250565b60405180910390fd5b610c4682826119c8565b5050565b610c5b610c556112dc565b82611b5e565b50565b6000600660019054906101000a900460ff16905090565b610c7d6121a8565b6007600a80602002604051908101604052809291906000905b82821015610d49578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d355780601f10610d0a57610100808354040283529160200191610d35565b820191906000526020600020905b815481529060010190602001808311610d1857829003601f168201915b505050505081526020019060010190610c96565b50505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b601454821015610de0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd7906131f0565b60405180910390fd5b610de982610c4a565b3373ffffffffffffffffffffffffffffffffffffffff167f47e772fda56eb54ab211642ce5421882c49fc2b7033455982af14588ae4207ff8383604051610e3192919061338b565b60405180910390a25050565b6000610e7c826040518060600160405280602481526020016136b560249139610e6d86610e686112dc565b61123e565b6117489092919063ffffffff16565b9050610e9083610e8a6112dc565b836112e4565b610e9a8383611b5e565b505050565b610ec3604051610eae90612fe1565b6040518091039020610ebe6112dc565b610f3d565b610f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef9906132f0565b60405180910390fd5b610f0a611d0e565b565b6000610f3582600080868152602001908152602001600020600001611db990919063ffffffff16565b905092915050565b6000610f6682600080868152602001908152602001600020600001611dd390919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110065780601f10610fdb57610100808354040283529160200191611006565b820191906000526020600020905b815481529060010190602001808311610fe957829003601f168201915b5050505050905090565b61103460405161101f9061300b565b604051809103902061102f6112dc565b610f3d565b611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a906131d0565b60405180910390fd5b80601381905550816014819055505050565b6000801b81565b600061114f6110996112dc565b8461114a856040518060600160405280602581526020016136d960259139600260006110c36112dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b6112e4565b6001905092915050565b600061116d6111666112dc565b84846114af565b6001905092915050565b6040516111839061300b565b604051809103902081565b60006111ad600080848152602001908152602001600020600001611e03565b9050919050565b6040516111c090612ff6565b604051809103902081565b6111f1600080848152602001908152602001600020600201546111ec6112dc565b610f3d565b611230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122790613210565b60405180910390fd5b61123a8282611836565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040516112d190612fe1565b604051809103902081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b906132d0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bb90613190565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516114a29190613370565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561151f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151690613290565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561158f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611586906130f0565b60405180910390fd5b61159a838383611e18565b6116068160405180606001604052806026815260200161366760269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061169b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161173b9190613370565b60405180910390a3505050565b6000838311158290611790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178791906130ae565b60405180910390fd5b5060008385039050809150509392505050565b6117ca81600080858152602001908152602001600020600001611e2890919063ffffffff16565b15611832576117d76112dc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61185d81600080858152602001908152602001600020600001611e5890919063ffffffff16565b156118c55761186a6112dc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015611914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190b906131b0565b60405180910390fd5b8091505092915050565b600660019054906101000a900460ff1661196d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196490613130565b60405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6119b16112dc565b6040516119be919061303b565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2f90613330565b60405180910390fd5b611a4460008383611e18565b611a59816003546118c990919063ffffffff16565b600381905550611ab181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b529190613370565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc590613270565b60405180910390fd5b611bda82600083611e18565b611c468160405180606001604052806022815260200161364560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117489092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c9e81600354611e8890919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d029190613370565b60405180910390a35050565b600660019054906101000a900460ff1615611d5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5590613230565b60405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611da26112dc565b604051611daf919061303b565b60405180910390a1565b6000611dc88360000183611ed2565b60001c905092915050565b6000611dfb836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611f3f565b905092915050565b6000611e1182600001611f62565b9050919050565b611e23838383611f73565b505050565b6000611e50836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611fcb565b905092915050565b6000611e80836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61203b565b905092915050565b6000611eca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611748565b905092915050565b600081836000018054905011611f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f14906130d0565b60405180910390fd5b826000018281548110611f2c57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b611f7e838383612123565b611f86610c5e565b15611fc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbd90613350565b60405180910390fd5b505050565b6000611fd78383611f3f565b612030578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612035565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114612117576000600182039050600060018660000180549050039050600086600001828154811061208657fe5b90600052602060002001549050808760000184815481106120a357fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806120db57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061211d565b60009150505b92915050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061216957805160ff1916838001178555612197565b82800160010185558215612197579182015b8281111561219657825182559160200191906001019061217b565b5b5090506121a491906121d0565b5090565b604051806101400160405280600a905b60608152602001906001900390816121b85790505090565b6121f291905b808211156121ee5760008160009055506001016121d6565b5090565b90565b600081359050612204816135e1565b92915050565b600081359050612219816135f8565b92915050565b600082601f83011261223057600080fd5b813561224361223e82613448565b61341b565b9150808252602083016020830185838301111561225f57600080fd5b61226a83828461358e565b50505092915050565b6000813590506122828161360f565b92915050565b60006020828403121561229a57600080fd5b60006122a8848285016121f5565b91505092915050565b600080604083850312156122c457600080fd5b60006122d2858286016121f5565b92505060206122e3858286016121f5565b9150509250929050565b60008060006060848603121561230257600080fd5b6000612310868287016121f5565b9350506020612321868287016121f5565b925050604061233286828701612273565b9150509250925092565b6000806040838503121561234f57600080fd5b600061235d858286016121f5565b925050602061236e85828601612273565b9150509250929050565b6000806000806080858703121561238e57600080fd5b600061239c878288016121f5565b94505060206123ad87828801612273565b935050604085013567ffffffffffffffff8111156123ca57600080fd5b6123d68782880161221f565b925050606085013567ffffffffffffffff8111156123f357600080fd5b6123ff8782880161221f565b91505092959194509250565b60006020828403121561241d57600080fd5b600061242b8482850161220a565b91505092915050565b6000806040838503121561244757600080fd5b60006124558582860161220a565b9250506020612466858286016121f5565b9150509250929050565b6000806040838503121561248357600080fd5b60006124918582860161220a565b92505060206124a285828601612273565b9150509250929050565b6000602082840312156124be57600080fd5b60006124cc84828501612273565b91505092915050565b600080604083850312156124e857600080fd5b60006124f685828601612273565b925050602083013567ffffffffffffffff81111561251357600080fd5b61251f8582860161221f565b9150509250929050565b6000806040838503121561253c57600080fd5b600061254a85828601612273565b925050602061255b85828601612273565b9150509250929050565b60006125718383612694565b905092915050565b61258281613558565b82525050565b612591816134f9565b82525050565b60006125a282613493565b6125ac81856134c1565b9350836020820285016125be85613474565b8060005b858110156125fa57848403895281516125db8582612565565b94506125e6836134b4565b925060208a019950506001810190506125c2565b50829750879550505050505092915050565b6126158161350b565b82525050565b61262481613517565b82525050565b6000612635826134a9565b61263f81856134dd565b935061264f81856020860161359d565b612658816135d0565b840191505092915050565b600061266e826134a9565b61267881856134ee565b935061268881856020860161359d565b80840191505092915050565b600061269f8261349e565b6126a981856134cc565b93506126b981856020860161359d565b6126c2816135d0565b840191505092915050565b6000815460018116600081146126ea576001811461270f57612753565b607f60028304166126fb81876134ee565b955060ff1983168652808601935050612753565b6002820461271d81876134ee565b95506127288561347e565b60005b8281101561274a5781548189015260018201915060208101905061272b565b82880195505050505b505092915050565b60006127686022836134dd565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127ce6023836134dd565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612834602f836134dd565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b600061289a6014836134dd565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b60006128da6039836134dd565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f20756e7061757365000000000000006020830152604082019050919050565b60006129406014836134dd565b91507f54686520747869642068617320657869737465640000000000000000000000006000830152602082019050919050565b60006129806022836134dd565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129e6601b836134dd565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000612a266014836134dd565b91507f41646a75737420726f6c652072657175697265640000000000000000000000006000830152602082019050919050565b6000612a66602e836134dd565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4275726e0000000000000000000000000000000000006020830152604082019050919050565b6000612acc6030836134dd565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000612b32600b836134ee565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612b726010836134dd565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000612bb26036836134dd565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f7665206d696e74657220726f6c6520746f206d696e74000000000000000000006020830152604082019050919050565b6000612c18600b836134ee565b91507f4d494e5445525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612c586021836134dd565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612cbe6025836134dd565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d24602e836134dd565b91507f546865206d696e696d756d2076616c7565206d7573742062652067726561746560008301527f72207468616e206d696e4d696e740000000000000000000000000000000000006020830152604082019050919050565b6000612d8a6024836134dd565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612df06037836134dd565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f2070617573650000000000000000006020830152604082019050919050565b6000612e56600b836134ee565b91507f41444a5553545f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b6000612e96602f836134dd565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b6000612efc601f836134dd565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6000612f3c602a836134dd565b91507f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008301527f696c6520706175736564000000000000000000000000000000000000000000006020830152604082019050919050565b612f9e81613541565b82525050565b612fad8161354b565b82525050565b6000612fbf8284612663565b915081905092915050565b6000612fd682846126cd565b915081905092915050565b6000612fec82612b25565b9150819050919050565b600061300182612c0b565b9150819050919050565b600061301682612e49565b9150819050919050565b60006020820190506130356000830184612588565b92915050565b60006020820190506130506000830184612579565b92915050565b600060208201905081810360008301526130708184612597565b905092915050565b600060208201905061308d600083018461260c565b92915050565b60006020820190506130a8600083018461261b565b92915050565b600060208201905081810360008301526130c8818461262a565b905092915050565b600060208201905081810360008301526130e98161275b565b9050919050565b60006020820190508181036000830152613109816127c1565b9050919050565b6000602082019050818103600083015261312981612827565b9050919050565b600060208201905081810360008301526131498161288d565b9050919050565b60006020820190508181036000830152613169816128cd565b9050919050565b6000602082019050818103600083015261318981612933565b9050919050565b600060208201905081810360008301526131a981612973565b9050919050565b600060208201905081810360008301526131c9816129d9565b9050919050565b600060208201905081810360008301526131e981612a19565b9050919050565b6000602082019050818103600083015261320981612a59565b9050919050565b6000602082019050818103600083015261322981612abf565b9050919050565b6000602082019050818103600083015261324981612b65565b9050919050565b6000602082019050818103600083015261326981612ba5565b9050919050565b6000602082019050818103600083015261328981612c4b565b9050919050565b600060208201905081810360008301526132a981612cb1565b9050919050565b600060208201905081810360008301526132c981612d17565b9050919050565b600060208201905081810360008301526132e981612d7d565b9050919050565b6000602082019050818103600083015261330981612de3565b9050919050565b6000602082019050818103600083015261332981612e89565b9050919050565b6000602082019050818103600083015261334981612eef565b9050919050565b6000602082019050818103600083015261336981612f2f565b9050919050565b60006020820190506133856000830184612f95565b92915050565b60006040820190506133a06000830185612f95565b81810360208301526133b2818461262a565b90509392505050565b60006060820190506133d06000830186612f95565b81810360208301526133e2818561262a565b905081810360408301526133f6818461262a565b9050949350505050565b60006020820190506134156000830184612fa4565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561343e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561345f57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b60008190508160005260206000209050919050565b6000600a9050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061350482613521565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006135638261356a565b9050919050565b60006135758261357c565b9050919050565b600061358782613521565b9050919050565b82818337600083830152505050565b60005b838110156135bb5780820151818401526020810190506135a0565b838111156135ca576000848401525b50505050565b6000601f19601f8301169050919050565b6135ea816134f9565b81146135f557600080fd5b50565b61360181613517565b811461360c57600080fd5b50565b61361881613541565b811461362357600080fd5b50565b80600660006101000a81548160ff021916908360ff1602179055505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122078d529c74aad8155fb809629ab473a403e909adacd1c0b64166de4f7d3808dd164736f6c63430006020033",
  "sourceMap": "172:1950:0:-:0;;;343:2;321:24;;394:5;376:23;;423:5;405:23;;453:1;435:19;;;;;;;;;;;;;;;;;;;;606:214;8:9:-1;5:2;;;30:1;27;20:12;5:2;606:214:0;;;;;;;;;;;;;;;;;;;;;;;;707:4;713:6;1290:4:5;1296:6;2093:4:6;2085:5;:12;;;;;;;;;;;;:::i;:::-;;2117:6;2107:7;:16;;;;;;;;;;;;:::i;:::-;;2145:2;2133:9;;:14;;;;;;;;;;;;;;;;;;2013:141;;933:5:12;923:7;;:15;;;;;;;;;;;;;;;;;;1314:44:5::1;1762:4:3;1325:18:5::0;::::1;1345:12;:10;;;:12;;:::i;:::-;1314:10;;;:44;;:::i;:::-;1369:37;947:24;;;;;;;;;;;;;;1393:12;:10;;;:12;;:::i;:::-;1369:10;;;:37;;:::i;:::-;1416;1015:24;;;;;;;;;;;;;;1440:12;:10;;;:12;;:::i;:::-;1416:10;;;:37;;:::i;:::-;1223:237:::0;;735:31:0::1;756:9;;;;;;;;;;;735:20;;;;;:31;;:::i;:::-;776:37;256:24;;;;;;;;;;;;;;800:12;:10;;;:12;;:::i;:::-;776:10;;;:37;;:::i;:::-;606:214:::0;;172:1950;;590:104:2;643:15;677:10;670:17;;590:104;:::o;6578:110:3:-;6656:25;6667:4;6673:7;6656:10;;;:25;;:::i;:::-;6578:110;;:::o;10022:88:6:-;10094:9;10082;;:21;;;;;;;;;;;;;;;;;;10022:88;:::o;7015:184:3:-;7088:33;7113:7;7088:6;:12;7095:4;7088:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7084:109;;;7169:12;:10;;;:12;;:::i;:::-;7142:40;;7160:7;7142:40;;7154:4;7142:40;;;;;;;;;;7084:109;7015:184;;:::o;4864:141:11:-;4934:4;4957:41;4962:3;:10;;4990:5;4982:14;;4974:23;;4957:4;;;:41;;:::i;:::-;4950:48;;4864:141;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;;;:21;;:::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1732:23:11;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;3776:127::-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;172:1950:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:444:-1:-;;119:3;112:4;104:6;100:17;96:27;86:2;;137:1;134;127:12;86:2;167:6;161:13;189:65;204:49;246:6;204:49;;;189:65;;;180:74;;274:6;267:5;260:21;310:4;302:6;298:17;343:4;336:5;332:16;378:3;369:6;364:3;360:16;357:25;354:2;;;395:1;392;385:12;354:2;405:39;437:6;432:3;427;405:39;;;79:371;;;;;;;;458:597;;;610:2;598:9;589:7;585:23;581:32;578:2;;;626:1;623;616:12;578:2;682:1;671:9;667:17;661:24;705:18;697:6;694:30;691:2;;;737:1;734;727:12;691:2;757:74;823:7;814:6;803:9;799:22;757:74;;;747:84;;640:197;889:2;878:9;874:18;868:25;913:18;905:6;902:30;899:2;;;945:1;942;935:12;899:2;965:74;1031:7;1022:6;1011:9;1007:22;965:74;;;955:84;;847:198;572:483;;;;;;1063:347;;1241:85;1323:2;1318:3;1241:85;;;1234:92;;1359:13;1355:1;1350:3;1346:11;1339:34;1401:2;1396:3;1392:12;1385:19;;1227:183;;;;1419:347;;1597:85;1679:2;1674:3;1597:85;;;1590:92;;1715:13;1711:1;1706:3;1702:11;1695:34;1757:2;1752:3;1748:12;1741:19;;1583:183;;;;1775:347;;1953:85;2035:2;2030:3;1953:85;;;1946:92;;2071:13;2067:1;2062:3;2058:11;2051:34;2113:2;2108:3;2104:12;2097:19;;1939:183;;;;2130:372;;2329:148;2473:3;2329:148;;;2322:155;;2494:3;2487:10;;2310:192;;;;2509:372;;2708:148;2852:3;2708:148;;;2701:155;;2873:3;2866:10;;2689:192;;;;2888:372;;3087:148;3231:3;3087:148;;;3080:155;;3252:3;3245:10;;3068:192;;;;3267:256;;3329:2;3323:9;3313:19;;3367:4;3359:6;3355:17;3466:6;3454:10;3451:22;3430:18;3418:10;3415:34;3412:62;3409:2;;;3487:1;3484;3477:12;3409:2;3507:10;3503:2;3496:22;3307:216;;;;;3530:322;;3674:18;3666:6;3663:30;3660:2;;;3706:1;3703;3696:12;3660:2;3773:4;3769:9;3762:4;3754:6;3750:17;3746:33;3738:41;;3837:4;3831;3827:15;3819:23;;3597:255;;;;3860:145;;3996:3;3981:18;;3974:31;;;;;4014:268;4079:1;4086:101;4100:6;4097:1;4094:13;4086:101;;;4176:1;4171:3;4167:11;4161:18;4157:1;4152:3;4148:11;4141:39;4122:2;4119:1;4115:10;4110:15;;4086:101;;;4202:6;4199:1;4196:13;4193:2;;;4267:1;4258:6;4253:3;4249:16;4242:27;4193:2;4063:219;;;;;172:1950:0;;;;;;;",
  "deployedSourceMap": "172:1950:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;172:1950:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:6;;;:::i;:::-;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;;;;;;;;;4881:317;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4272:112:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4634:223;;;;;;;;;;;;;;;;:::i;:::-;;826:687:0;;;;;;;;;;;;;;;;:::i;:::-;;3121:81:6;;;:::i;:::-;;;;;;;;;;;;;;;;5808:205:3;;;;;;;;;;;;;;;;:::i;:::-;;5593:215:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2430:175:5;;;:::i;:::-;;1649:202;;;;;;;;;;;;;;;;:::i;:::-;;481:89:7;;;;;;;;;;;;;;;;:::i;:::-;;1040:76:12;;;:::i;:::-;;;;;;;;;;;;;;;;2028:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;3418:117:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1519:261:0;;;;;;;;;;;;;;;;:::i;:::-;;876:290:7;;;;;;;;;;;;;;;;:::i;:::-;;2054:169:5;;;:::i;:::-;;3955:136:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2940:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2413:85:6;;;:::i;:::-;;;;;;;;;;;;;;;;1786:236:0;;;;;;;;;;;;;;;;:::i;:::-;;1717:49:3;;;:::i;:::-;;;;;;;;;;;;;;;;6295:266:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3738:172;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;218:62:0;;;:::i;:::-;;;;;;;;;;;;;;;;3245:125:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;909:62:5;;;:::i;:::-;;;;;;;;;;;;;;;;5091:226:3;;;;;;;;;;;;;;;;:::i;:::-;;3968:149:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;977:62:5;;;:::i;:::-;;;;;;;;;;;;;;;;2219:81:6;2256:13;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;4410:4;4403:11;;4255:166;;;;:::o;3262:98::-;3315:7;3341:12;;3334:19;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;:11;:19;5092:6;5080:19;;;;;;;;;;;;;;;:33;5100:12;:10;:12::i;:::-;5080:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5049:8;:121::i;:::-;5187:4;5180:11;;4881:317;;;;;:::o;4272:112:3:-;4329:7;4355:6;:12;4362:4;4355:12;;;;;;;;;;;:22;;;4348:29;;4272:112;;;:::o;4634:223::-;4717:45;4725:6;:12;4732:4;4725:12;;;;;;;;;;;:22;;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;826:687:0:-;1002:7;;992:6;:17;;971:110;;;;;;;;;;;;;;;;;;;;;;1096:9;1108:1;1096:13;;1091:244;1115:11;;1111:1;:15;1091:244;;;1264:4;1247:22;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1247:22:0;;;1237:33;;;;;;1199:9;1209:1;1199:12;;;;;;;;1182:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1182:30:0;;;1172:41;;;;;;:98;;1147:177;;;;;;;;;;;;;;;;;;;;;;1128:3;;;;;;;1091:244;;;;1344:17;1369:11;;1364:2;;:16;;;;;;1344:36;;1413:4;1390:9;1400;1390:20;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;1427:2;;:4;;;;;;;;;;;;;1441:22;1452:2;1456:6;1441:10;:22::i;:::-;1483:2;1478:28;;;1487:6;1495:4;1501;1478:28;;;;;;;;;;;;;;;;;826:687;;;;;:::o;3121:81:6:-;3162:5;3186:9;;;;;;;;;;;3179:16;;3121:81;:::o;5808:205:3:-;5905:12;:10;:12::i;:::-;5894:23;;:7;:23;;;5886:83;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;:::-;5808:205;;:::o;5593:215:6:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;5729:25;;;;;;;;;;;;;;;:34;5755:7;5729:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5697:8;:83::i;:::-;5797:4;5790:11;;5593:215;;;;:::o;2430:175:5:-;2482:34;1015:24;;;;;;;;;;;;;;2503:12;:10;:12::i;:::-;2482:7;:34::i;:::-;2474:104;;;;;;;;;;;;;;;;;;;;;;2588:10;:8;:10::i;:::-;2430:175::o;1649:202::-;1724:34;947:24;;;;;;;;;;;;;;1745:12;:10;:12::i;:::-;1724:7;:34::i;:::-;1716:101;;;;;;;;;;;;;;;;;;;;;;1827:17;1833:2;1837:6;1827:5;:17::i;:::-;1649:202;;:::o;481:89:7:-;536:27;542:12;:10;:12::i;:::-;556:6;536:5;:27::i;:::-;481:89;:::o;1040:76:12:-;1079:4;1102:7;;;;;;;;;;;1095:14;;1040:76;:::o;2028:92:0:-;2068:17;;:::i;:::-;2104:9;2097:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2028:92;:::o;3418:117:6:-;3484:7;3510:9;:18;3520:7;3510:18;;;;;;;;;;;;;;;;3503:25;;3418:117;;;:::o;1519:261:0:-;1623:7;;1613:6;:17;;1592:110;;;;;;;;;;;;;;;;;;;;;;1712:18;1723:6;1712:10;:18::i;:::-;1750:10;1745:28;;;1762:6;1770:2;1745:28;;;;;;;;;;;;;;;;1519:261;;:::o;876:290:7:-;952:26;981:84;1018:6;981:84;;;;;;;;;;;;;;;;;:32;991:7;1000:12;:10;:12::i;:::-;981:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;952:113;;1076:51;1085:7;1094:12;:10;:12::i;:::-;1108:18;1076:8;:51::i;:::-;1137:22;1143:7;1152:6;1137:5;:22::i;:::-;876:290;;;:::o;2054:169:5:-;2104:34;1015:24;;;;;;;;;;;;;;2125:12;:10;:12::i;:::-;2104:7;:34::i;:::-;2096:102;;;;;;;;;;;;;;;;;;;;;;2208:8;:6;:8::i;:::-;2054:169::o;3955:136:3:-;4028:7;4054:30;4078:5;4054:6;:12;4061:4;4054:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4047:37;;3955:136;;;;:::o;2940:137::-;3009:4;3032:38;3062:7;3032:6;:12;3039:4;3032:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3025:45;;2940:137;;;;:::o;2413:85:6:-;2452:13;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:85;:::o;1786:236:0:-;1900:34;256:24;;;;;;;;;;;;;;1921:12;:10;:12::i;:::-;1900:7;:34::i;:::-;1892:67;;;;;;;;;;;;;;;;;;;;;;1979:8;1969:7;:18;;;;2007:8;1997:7;:18;;;;1786:236;;:::o;1717:49:3:-;1762:4;1717:49;;;:::o;6295:266:6:-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;6436:25;;;;;;;;;;;;;;;:34;6462:7;6436:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6404:8;:129::i;:::-;6550:4;6543:11;;6295:266;;;;:::o;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;:::-;3899:4;3892:11;;3738:172;;;;:::o;218:62:0:-;256:24;;;;;;;;;;;;;;218:62;:::o;3245:125:3:-;3308:7;3334:29;:6;:12;3341:4;3334:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3327:36;;3245:125;;;:::o;909:62:5:-;947:24;;;;;;;;;;;;;;909:62;:::o;5091:226:3:-;5175:45;5183:6;:12;5190:4;5183:12;;;;;;;;;;;:22;;;5207:12;:10;:12::i;:::-;5175:7;:45::i;:::-;5167:106;;;;;;;;;;;;;;;;;;;;;;5284:26;5296:4;5302:7;5284:11;:26::i;:::-;5091:226;;:::o;3968:149:6:-;4057:7;4083:11;:18;4095:5;4083:18;;;;;;;;;;;;;;;:27;4102:7;4083:27;;;;;;;;;;;;;;;;4076:34;;3968:149;;;;:::o;977:62:5:-;1015:24;;;;;;;;;;;;;;977:62;:::o;590:104:2:-;643:15;677:10;670:17;;590:104;:::o;9359:340:6:-;9477:1;9460:19;;:5;:19;;;;9452:68;;;;;;;;;;;;;;;;;;;;;;9557:1;9538:21;;:7;:21;;;;9530:68;;;;;;;;;;;;;;;;;;;;;;9639:6;9609:11;:18;9621:5;9609:18;;;;;;;;;;;;;;;:27;9628:7;9609:27;;;;;;;;;;;;;;;:36;;;;9676:7;9660:32;;9669:5;9660:32;;;9685:6;9660:32;;;;;;;;;;;;;;;9359:340;;;:::o;7035:530::-;7158:1;7140:20;;:6;:20;;;;7132:70;;;;;;;;;;;;;;;;;;;;;;7241:1;7220:23;;:9;:23;;;;7212:71;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;:9;:17;7382:6;7372:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7352:9;:17;7362:6;7352:17;;;;;;;;;;;;;;;:91;;;;7476:32;7501:6;7476:9;:20;7486:9;7476:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;:55;;;;7540:9;7523:35;;7532:6;7523:35;;;7551:6;7523:35;;;;;;;;;;;;;;;7035:530;;;:::o;1746:187:4:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;7015:184:3:-;7088:33;7113:7;7088:6;:12;7095:4;7088:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;7142:40;;7160:7;7142:40;;7154:4;7142:40;;;;;;;;;;7084:109;7015:184;;:::o;7205:188::-;7279:36;7307:7;7279:6;:12;7286:4;7279:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;7336:40;;7354:7;7336:40;;7348:4;7336:40;;;;;;;;;;7275:112;7205:188;;:::o;874:176:4:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;2042:117:12:-;1610:7;;;;;;;;;;;1602:40;;;;;;;;;;;;;;;;;;;;;;2110:5:::1;2100:7;;:15;;;;;;;;;;;;;;;;;;2130:22;2139:12;:10;:12::i;:::-;2130:22;;;;;;;;;;;;;;;2042:117::o:0;7835:370:6:-;7937:1;7918:21;;:7;:21;;;;7910:65;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:24;8078:6;8061:12;;:16;;:24;;;;:::i;:::-;8046:12;:39;;;;8116:30;8139:6;8116:9;:18;8126:7;8116:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8095:9;:18;8105:7;8095:18;;;;;;;;;;;;;;;:51;;;;8182:7;8161:37;;8178:1;8161:37;;;8191:6;8161:37;;;;;;;;;;;;;;;7835:370;;:::o;8524:410::-;8626:1;8607:21;;:7;:21;;;;8599:67;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;:9;:18;8768:7;8758:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8737:9;:18;8747:7;8737:18;;;;;;;;;;;;;;;:89;;;;8851:24;8868:6;8851:12;;:16;;:24;;;;:::i;:::-;8836:12;:39;;;;8916:1;8890:37;;8899:7;8890:37;;;8920:6;8890:37;;;;;;;;;;;;;;;8524:410;;:::o;1795:115:12:-;1346:7;;;;;;;;;;;1345:8;1337:37;;;;;;;;;;;;;;;;;;;;;;1864:4:::1;1854:7;;:14;;;;;;;;;;;;;;;;;;1883:20;1890:12;:10;:12::i;:::-;1883:20;;;;;;;;;;;;;;;1795:115::o:0;6085:147:11:-;6159:7;6201:22;6205:3;:10;;6217:5;6201:3;:22::i;:::-;6193:31;;6178:47;;6085:147;;;;:::o;5401:156::-;5481:4;5504:46;5514:3;:10;;5542:5;5534:14;;5526:23;;5504:9;:46::i;:::-;5497:53;;5401:156;;;;:::o;5638:115::-;5701:7;5727:19;5735:3;:10;;5727:7;:19::i;:::-;5720:26;;5638:115;;;:::o;2611:181:5:-;2741:44;2768:4;2774:2;2778:6;2741:26;:44::i;:::-;2611:181;;;:::o;4864:141:11:-;4934:4;4957:41;4962:3;:10;;4990:5;4982:14;;4974:23;;4957:4;:41::i;:::-;4950:48;;4864:141;;;;:::o;5173:147::-;5246:4;5269:44;5277:3;:10;;5305:5;5297:14;;5289:23;;5269:7;:44::i;:::-;5262:51;;5173:147;;;;:::o;1321:134:4:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;4423:201:11:-;4490:7;4538:5;4517:3;:11;;:18;;;;:26;4509:73;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;3984:107::-;4040:7;4066:3;:11;;:18;;;;4059:25;;3984:107;;;:::o;582:234:8:-;690:44;717:4;723:2;727:6;690:26;:44::i;:::-;754:8;:6;:8::i;:::-;753:9;745:64;;;;;;;;;;;;;;;;;;;;;;582:234;;;:::o;1611:404:11:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1732:23:11;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;2183:1512::-;2249:4;2365:18;2386:3;:12;;:19;2399:5;2386:19;;;;;;;;;;;;2365:40;;2434:1;2420:10;:15;2416:1273;;2777:21;2814:1;2801:10;:14;2777:38;;2829:17;2870:1;2849:3;:11;;:18;;;;:22;2829:42;;3111:17;3131:3;:11;;3143:9;3131:22;;;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;:38;;;;3391:1;3375:13;:17;3349:3;:12;;:23;3362:9;3349:23;;;;;;;;;;;:43;;;;3498:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;2183:1512;;;;;:::o;10697:92:6:-;;;;:::o;172:1950:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:130;;222:6;209:20;200:29;;234:33;261:5;234:33;;;194:78;;;;;280:442;;382:3;375:4;367:6;363:17;359:27;349:2;;400:1;397;390:12;349:2;437:6;424:20;459:65;474:49;516:6;474:49;;;459:65;;;450:74;;544:6;537:5;530:21;580:4;572:6;568:17;613:4;606:5;602:16;648:3;639:6;634:3;630:16;627:25;624:2;;;665:1;662;655:12;624:2;675:41;709:6;704:3;699;675:41;;;342:380;;;;;;;;730:130;;810:6;797:20;788:29;;822:33;849:5;822:33;;;782:78;;;;;867:241;;971:2;959:9;950:7;946:23;942:32;939:2;;;987:1;984;977:12;939:2;1022:1;1039:53;1084:7;1075:6;1064:9;1060:22;1039:53;;;1029:63;;1001:97;933:175;;;;;1115:366;;;1236:2;1224:9;1215:7;1211:23;1207:32;1204:2;;;1252:1;1249;1242:12;1204:2;1287:1;1304:53;1349:7;1340:6;1329:9;1325:22;1304:53;;;1294:63;;1266:97;1394:2;1412:53;1457:7;1448:6;1437:9;1433:22;1412:53;;;1402:63;;1373:98;1198:283;;;;;;1488:491;;;;1626:2;1614:9;1605:7;1601:23;1597:32;1594:2;;;1642:1;1639;1632:12;1594:2;1677:1;1694:53;1739:7;1730:6;1719:9;1715:22;1694:53;;;1684:63;;1656:97;1784:2;1802:53;1847:7;1838:6;1827:9;1823:22;1802:53;;;1792:63;;1763:98;1892:2;1910:53;1955:7;1946:6;1935:9;1931:22;1910:53;;;1900:63;;1871:98;1588:391;;;;;;1986:366;;;2107:2;2095:9;2086:7;2082:23;2078:32;2075:2;;;2123:1;2120;2113:12;2075:2;2158:1;2175:53;2220:7;2211:6;2200:9;2196:22;2175:53;;;2165:63;;2137:97;2265:2;2283:53;2328:7;2319:6;2308:9;2304:22;2283:53;;;2273:63;;2244:98;2069:283;;;;;;2359:829;;;;;2534:3;2522:9;2513:7;2509:23;2505:33;2502:2;;;2551:1;2548;2541:12;2502:2;2586:1;2603:53;2648:7;2639:6;2628:9;2624:22;2603:53;;;2593:63;;2565:97;2693:2;2711:53;2756:7;2747:6;2736:9;2732:22;2711:53;;;2701:63;;2672:98;2829:2;2818:9;2814:18;2801:32;2853:18;2845:6;2842:30;2839:2;;;2885:1;2882;2875:12;2839:2;2905:63;2960:7;2951:6;2940:9;2936:22;2905:63;;;2895:73;;2780:194;3033:2;3022:9;3018:18;3005:32;3057:18;3049:6;3046:30;3043:2;;;3089:1;3086;3079:12;3043:2;3109:63;3164:7;3155:6;3144:9;3140:22;3109:63;;;3099:73;;2984:194;2496:692;;;;;;;;3195:241;;3299:2;3287:9;3278:7;3274:23;3270:32;3267:2;;;3315:1;3312;3305:12;3267:2;3350:1;3367:53;3412:7;3403:6;3392:9;3388:22;3367:53;;;3357:63;;3329:97;3261:175;;;;;3443:366;;;3564:2;3552:9;3543:7;3539:23;3535:32;3532:2;;;3580:1;3577;3570:12;3532:2;3615:1;3632:53;3677:7;3668:6;3657:9;3653:22;3632:53;;;3622:63;;3594:97;3722:2;3740:53;3785:7;3776:6;3765:9;3761:22;3740:53;;;3730:63;;3701:98;3526:283;;;;;;3816:366;;;3937:2;3925:9;3916:7;3912:23;3908:32;3905:2;;;3953:1;3950;3943:12;3905:2;3988:1;4005:53;4050:7;4041:6;4030:9;4026:22;4005:53;;;3995:63;;3967:97;4095:2;4113:53;4158:7;4149:6;4138:9;4134:22;4113:53;;;4103:63;;4074:98;3899:283;;;;;;4189:241;;4293:2;4281:9;4272:7;4268:23;4264:32;4261:2;;;4309:1;4306;4299:12;4261:2;4344:1;4361:53;4406:7;4397:6;4386:9;4382:22;4361:53;;;4351:63;;4323:97;4255:175;;;;;4437:472;;;4568:2;4556:9;4547:7;4543:23;4539:32;4536:2;;;4584:1;4581;4574:12;4536:2;4619:1;4636:53;4681:7;4672:6;4661:9;4657:22;4636:53;;;4626:63;;4598:97;4754:2;4743:9;4739:18;4726:32;4778:18;4770:6;4767:30;4764:2;;;4810:1;4807;4800:12;4764:2;4830:63;4885:7;4876:6;4865:9;4861:22;4830:63;;;4820:73;;4705:194;4530:379;;;;;;4916:366;;;5037:2;5025:9;5016:7;5012:23;5008:32;5005:2;;;5053:1;5050;5043:12;5005:2;5088:1;5105:53;5150:7;5141:6;5130:9;5126:22;5105:53;;;5095:63;;5067:97;5195:2;5213:53;5258:7;5249:6;5238:9;5234:22;5213:53;;;5203:63;;5174:98;4999:283;;;;;;5290:181;;5403:62;5461:3;5453:6;5403:62;;;5389:76;;5382:89;;;;;5479:142;5570:45;5609:5;5570:45;;;5565:3;5558:58;5552:69;;;5628:113;5711:24;5729:5;5711:24;;;5706:3;5699:37;5693:48;;;5781:890;;5936:59;5989:5;5936:59;;;6008:91;6092:6;6087:3;6008:91;;;6001:98;;6122:3;6164:4;6156:6;6152:17;6147:3;6143:27;6191:61;6246:5;6191:61;;;6272:7;6300:1;6285:347;6310:6;6307:1;6304:13;6285:347;;;6372:9;6366:4;6362:20;6357:3;6350:33;6417:6;6411:13;6439:76;6510:4;6495:13;6439:76;;;6431:84;;6532:65;6590:6;6532:65;;;6522:75;;6620:4;6615:3;6611:14;6604:21;;6342:290;6332:1;6329;6325:9;6320:14;;6285:347;;;6289:14;6645:4;6638:11;;6662:3;6655:10;;5915:756;;;;;;;;;;6679:104;6756:21;6771:5;6756:21;;;6751:3;6744:34;6738:45;;;6790:113;6873:24;6891:5;6873:24;;;6868:3;6861:37;6855:48;;;6910:347;;7022:39;7055:5;7022:39;;;7073:71;7137:6;7132:3;7073:71;;;7066:78;;7149:52;7194:6;7189:3;7182:4;7175:5;7171:16;7149:52;;;7222:29;7244:6;7222:29;;;7217:3;7213:39;7206:46;;7002:255;;;;;;7264:360;;7394:39;7427:5;7394:39;;;7445:89;7527:6;7522:3;7445:89;;;7438:96;;7539:52;7584:6;7579:3;7572:4;7565:5;7561:16;7539:52;;;7612:6;7607:3;7603:16;7596:23;;7374:250;;;;;;7631:319;;7729:35;7758:5;7729:35;;;7776:61;7830:6;7825:3;7776:61;;;7769:68;;7842:52;7887:6;7882:3;7875:4;7868:5;7864:16;7842:52;;;7915:29;7937:6;7915:29;;;7910:3;7906:39;7899:46;;7709:241;;;;;;7982:884;;8119:5;8113:12;8153:1;8142:9;8138:17;8166:1;8161:268;;;;8440:1;8435:425;;;;8131:729;;8161:268;8239:4;8235:1;8224:9;8220:17;8216:28;8258:89;8340:6;8335:3;8258:89;;;8251:96;;8385:4;8381:9;8370;8366:25;8361:3;8354:38;8415:6;8410:3;8406:16;8399:23;;8168:261;8161:268;;8435:425;8504:1;8493:9;8489:17;8520:89;8602:6;8597:3;8520:89;;;8513:96;;8631:38;8663:5;8631:38;;;8685:1;8693:130;8707:6;8704:1;8701:13;8693:130;;;8772:7;8766:14;8762:1;8757:3;8753:11;8746:35;8813:1;8804:7;8800:15;8789:26;;8729:4;8726:1;8722:12;8717:17;;8693:130;;;8846:6;8841:3;8837:16;8830:23;;8442:418;;;8131:729;;8089:777;;;;;;8875:371;;9035:67;9099:2;9094:3;9035:67;;;9028:74;;9135:34;9131:1;9126:3;9122:11;9115:55;9204:4;9199:2;9194:3;9190:12;9183:26;9237:2;9232:3;9228:12;9221:19;;9021:225;;;;9255:372;;9415:67;9479:2;9474:3;9415:67;;;9408:74;;9515:34;9511:1;9506:3;9502:11;9495:55;9584:5;9579:2;9574:3;9570:12;9563:27;9618:2;9613:3;9609:12;9602:19;;9401:226;;;;9636:384;;9796:67;9860:2;9855:3;9796:67;;;9789:74;;9896:34;9892:1;9887:3;9883:11;9876:55;9965:17;9960:2;9955:3;9951:12;9944:39;10011:2;10006:3;10002:12;9995:19;;9782:238;;;;10029:320;;10189:67;10253:2;10248:3;10189:67;;;10182:74;;10289:22;10285:1;10280:3;10276:11;10269:43;10340:2;10335:3;10331:12;10324:19;;10175:174;;;;10358:394;;10518:67;10582:2;10577:3;10518:67;;;10511:74;;10618:34;10614:1;10609:3;10605:11;10598:55;10687:27;10682:2;10677:3;10673:12;10666:49;10743:2;10738:3;10734:12;10727:19;;10504:248;;;;10761:320;;10921:67;10985:2;10980:3;10921:67;;;10914:74;;11021:22;11017:1;11012:3;11008:11;11001:43;11072:2;11067:3;11063:12;11056:19;;10907:174;;;;11090:371;;11250:67;11314:2;11309:3;11250:67;;;11243:74;;11350:34;11346:1;11341:3;11337:11;11330:55;11419:4;11414:2;11409:3;11405:12;11398:26;11452:2;11447:3;11443:12;11436:19;;11236:225;;;;11470:327;;11630:67;11694:2;11689:3;11630:67;;;11623:74;;11730:29;11726:1;11721:3;11717:11;11710:50;11788:2;11783:3;11779:12;11772:19;;11616:181;;;;11806:320;;11966:67;12030:2;12025:3;11966:67;;;11959:74;;12066:22;12062:1;12057:3;12053:11;12046:43;12117:2;12112:3;12108:12;12101:19;;11952:174;;;;12135:383;;12295:67;12359:2;12354:3;12295:67;;;12288:74;;12395:34;12391:1;12386:3;12382:11;12375:55;12464:16;12459:2;12454:3;12450:12;12443:38;12509:2;12504:3;12500:12;12493:19;;12281:237;;;;12527:385;;12687:67;12751:2;12746:3;12687:67;;;12680:74;;12787:34;12783:1;12778:3;12774:11;12767:55;12856:18;12851:2;12846:3;12842:12;12835:40;12903:2;12898:3;12894:12;12887:19;;12673:239;;;;12921:347;;13099:85;13181:2;13176:3;13099:85;;;13092:92;;13217:13;13213:1;13208:3;13204:11;13197:34;13259:2;13254:3;13250:12;13243:19;;13085:183;;;;13277:316;;13437:67;13501:2;13496:3;13437:67;;;13430:74;;13537:18;13533:1;13528:3;13524:11;13517:39;13584:2;13579:3;13575:12;13568:19;;13423:170;;;;13602:391;;13762:67;13826:2;13821:3;13762:67;;;13755:74;;13862:34;13858:1;13853:3;13849:11;13842:55;13931:24;13926:2;13921:3;13917:12;13910:46;13984:2;13979:3;13975:12;13968:19;;13748:245;;;;14002:347;;14180:85;14262:2;14257:3;14180:85;;;14173:92;;14298:13;14294:1;14289:3;14285:11;14278:34;14340:2;14335:3;14331:12;14324:19;;14166:183;;;;14358:370;;14518:67;14582:2;14577:3;14518:67;;;14511:74;;14618:34;14614:1;14609:3;14605:11;14598:55;14687:3;14682:2;14677:3;14673:12;14666:25;14719:2;14714:3;14710:12;14703:19;;14504:224;;;;14737:374;;14897:67;14961:2;14956:3;14897:67;;;14890:74;;14997:34;14993:1;14988:3;14984:11;14977:55;15066:7;15061:2;15056:3;15052:12;15045:29;15102:2;15097:3;15093:12;15086:19;;14883:228;;;;15120:383;;15280:67;15344:2;15339:3;15280:67;;;15273:74;;15380:34;15376:1;15371:3;15367:11;15360:55;15449:16;15444:2;15439:3;15435:12;15428:38;15494:2;15489:3;15485:12;15478:19;;15266:237;;;;15512:373;;15672:67;15736:2;15731:3;15672:67;;;15665:74;;15772:34;15768:1;15763:3;15759:11;15752:55;15841:6;15836:2;15831:3;15827:12;15820:28;15876:2;15871:3;15867:12;15860:19;;15658:227;;;;15894:392;;16054:67;16118:2;16113:3;16054:67;;;16047:74;;16154:34;16150:1;16145:3;16141:11;16134:55;16223:25;16218:2;16213:3;16209:12;16202:47;16277:2;16272:3;16268:12;16261:19;;16040:246;;;;16295:347;;16473:85;16555:2;16550:3;16473:85;;;16466:92;;16591:13;16587:1;16582:3;16578:11;16571:34;16633:2;16628:3;16624:12;16617:19;;16459:183;;;;16651:384;;16811:67;16875:2;16870:3;16811:67;;;16804:74;;16911:34;16907:1;16902:3;16898:11;16891:55;16980:17;16975:2;16970:3;16966:12;16959:39;17026:2;17021:3;17017:12;17010:19;;16797:238;;;;17044:331;;17204:67;17268:2;17263:3;17204:67;;;17197:74;;17304:33;17300:1;17295:3;17291:11;17284:54;17366:2;17361:3;17357:12;17350:19;;17190:185;;;;17384:379;;17544:67;17608:2;17603:3;17544:67;;;17537:74;;17644:34;17640:1;17635:3;17631:11;17624:55;17713:12;17708:2;17703:3;17699:12;17692:34;17754:2;17749:3;17745:12;17738:19;;17530:233;;;;17771:113;17854:24;17872:5;17854:24;;;17849:3;17842:37;17836:48;;;17891:107;17970:22;17986:5;17970:22;;;17965:3;17958:35;17952:46;;;18005:266;;18151:95;18242:3;18233:6;18151:95;;;18144:102;;18263:3;18256:10;;18132:139;;;;;18278:260;;18421:92;18509:3;18500:6;18421:92;;;18414:99;;18530:3;18523:10;;18402:136;;;;;18545:372;;18744:148;18888:3;18744:148;;;18737:155;;18909:3;18902:10;;18725:192;;;;18924:372;;19123:148;19267:3;19123:148;;;19116:155;;19288:3;19281:10;;19104:192;;;;19303:372;;19502:148;19646:3;19502:148;;;19495:155;;19667:3;19660:10;;19483:192;;;;19682:213;;19800:2;19789:9;19785:18;19777:26;;19814:71;19882:1;19871:9;19867:17;19858:6;19814:71;;;19771:124;;;;;19902:229;;20028:2;20017:9;20013:18;20005:26;;20042:79;20118:1;20107:9;20103:17;20094:6;20042:79;;;19999:132;;;;;20138:381;;20316:2;20305:9;20301:18;20293:26;;20366:9;20360:4;20356:20;20352:1;20341:9;20337:17;20330:47;20391:118;20504:4;20495:6;20391:118;;;20383:126;;20287:232;;;;;20526:201;;20638:2;20627:9;20623:18;20615:26;;20652:65;20714:1;20703:9;20699:17;20690:6;20652:65;;;20609:118;;;;;20734:213;;20852:2;20841:9;20837:18;20829:26;;20866:71;20934:1;20923:9;20919:17;20910:6;20866:71;;;20823:124;;;;;20954:301;;21092:2;21081:9;21077:18;21069:26;;21142:9;21136:4;21132:20;21128:1;21117:9;21113:17;21106:47;21167:78;21240:4;21231:6;21167:78;;;21159:86;;21063:192;;;;;21262:407;;21453:2;21442:9;21438:18;21430:26;;21503:9;21497:4;21493:20;21489:1;21478:9;21474:17;21467:47;21528:131;21654:4;21528:131;;;21520:139;;21424:245;;;;21676:407;;21867:2;21856:9;21852:18;21844:26;;21917:9;21911:4;21907:20;21903:1;21892:9;21888:17;21881:47;21942:131;22068:4;21942:131;;;21934:139;;21838:245;;;;22090:407;;22281:2;22270:9;22266:18;22258:26;;22331:9;22325:4;22321:20;22317:1;22306:9;22302:17;22295:47;22356:131;22482:4;22356:131;;;22348:139;;22252:245;;;;22504:407;;22695:2;22684:9;22680:18;22672:26;;22745:9;22739:4;22735:20;22731:1;22720:9;22716:17;22709:47;22770:131;22896:4;22770:131;;;22762:139;;22666:245;;;;22918:407;;23109:2;23098:9;23094:18;23086:26;;23159:9;23153:4;23149:20;23145:1;23134:9;23130:17;23123:47;23184:131;23310:4;23184:131;;;23176:139;;23080:245;;;;23332:407;;23523:2;23512:9;23508:18;23500:26;;23573:9;23567:4;23563:20;23559:1;23548:9;23544:17;23537:47;23598:131;23724:4;23598:131;;;23590:139;;23494:245;;;;23746:407;;23937:2;23926:9;23922:18;23914:26;;23987:9;23981:4;23977:20;23973:1;23962:9;23958:17;23951:47;24012:131;24138:4;24012:131;;;24004:139;;23908:245;;;;24160:407;;24351:2;24340:9;24336:18;24328:26;;24401:9;24395:4;24391:20;24387:1;24376:9;24372:17;24365:47;24426:131;24552:4;24426:131;;;24418:139;;24322:245;;;;24574:407;;24765:2;24754:9;24750:18;24742:26;;24815:9;24809:4;24805:20;24801:1;24790:9;24786:17;24779:47;24840:131;24966:4;24840:131;;;24832:139;;24736:245;;;;24988:407;;25179:2;25168:9;25164:18;25156:26;;25229:9;25223:4;25219:20;25215:1;25204:9;25200:17;25193:47;25254:131;25380:4;25254:131;;;25246:139;;25150:245;;;;25402:407;;25593:2;25582:9;25578:18;25570:26;;25643:9;25637:4;25633:20;25629:1;25618:9;25614:17;25607:47;25668:131;25794:4;25668:131;;;25660:139;;25564:245;;;;25816:407;;26007:2;25996:9;25992:18;25984:26;;26057:9;26051:4;26047:20;26043:1;26032:9;26028:17;26021:47;26082:131;26208:4;26082:131;;;26074:139;;25978:245;;;;26230:407;;26421:2;26410:9;26406:18;26398:26;;26471:9;26465:4;26461:20;26457:1;26446:9;26442:17;26435:47;26496:131;26622:4;26496:131;;;26488:139;;26392:245;;;;26644:407;;26835:2;26824:9;26820:18;26812:26;;26885:9;26879:4;26875:20;26871:1;26860:9;26856:17;26849:47;26910:131;27036:4;26910:131;;;26902:139;;26806:245;;;;27058:407;;27249:2;27238:9;27234:18;27226:26;;27299:9;27293:4;27289:20;27285:1;27274:9;27270:17;27263:47;27324:131;27450:4;27324:131;;;27316:139;;27220:245;;;;27472:407;;27663:2;27652:9;27648:18;27640:26;;27713:9;27707:4;27703:20;27699:1;27688:9;27684:17;27677:47;27738:131;27864:4;27738:131;;;27730:139;;27634:245;;;;27886:407;;28077:2;28066:9;28062:18;28054:26;;28127:9;28121:4;28117:20;28113:1;28102:9;28098:17;28091:47;28152:131;28278:4;28152:131;;;28144:139;;28048:245;;;;28300:407;;28491:2;28480:9;28476:18;28468:26;;28541:9;28535:4;28531:20;28527:1;28516:9;28512:17;28505:47;28566:131;28692:4;28566:131;;;28558:139;;28462:245;;;;28714:407;;28905:2;28894:9;28890:18;28882:26;;28955:9;28949:4;28945:20;28941:1;28930:9;28926:17;28919:47;28980:131;29106:4;28980:131;;;28972:139;;28876:245;;;;29128:407;;29319:2;29308:9;29304:18;29296:26;;29369:9;29363:4;29359:20;29355:1;29344:9;29340:17;29333:47;29394:131;29520:4;29394:131;;;29386:139;;29290:245;;;;29542:407;;29733:2;29722:9;29718:18;29710:26;;29783:9;29777:4;29773:20;29769:1;29758:9;29754:17;29747:47;29808:131;29934:4;29808:131;;;29800:139;;29704:245;;;;29956:213;;30074:2;30063:9;30059:18;30051:26;;30088:71;30156:1;30145:9;30141:17;30132:6;30088:71;;;30045:124;;;;;30176:412;;30342:2;30331:9;30327:18;30319:26;;30356:71;30424:1;30413:9;30409:17;30400:6;30356:71;;;30475:9;30469:4;30465:20;30460:2;30449:9;30445:18;30438:48;30500:78;30573:4;30564:6;30500:78;;;30492:86;;30313:275;;;;;;30595:611;;30809:2;30798:9;30794:18;30786:26;;30823:71;30891:1;30880:9;30876:17;30867:6;30823:71;;;30942:9;30936:4;30932:20;30927:2;30916:9;30912:18;30905:48;30967:78;31040:4;31031:6;30967:78;;;30959:86;;31093:9;31087:4;31083:20;31078:2;31067:9;31063:18;31056:48;31118:78;31191:4;31182:6;31118:78;;;31110:86;;30780:426;;;;;;;31213:205;;31327:2;31316:9;31312:18;31304:26;;31341:67;31405:1;31394:9;31390:17;31381:6;31341:67;;;31298:120;;;;;31425:256;;31487:2;31481:9;31471:19;;31525:4;31517:6;31513:17;31624:6;31612:10;31609:22;31588:18;31576:10;31573:34;31570:62;31567:2;;;31645:1;31642;31635:12;31567:2;31665:10;31661:2;31654:22;31465:216;;;;;31688:322;;31832:18;31824:6;31821:30;31818:2;;;31864:1;31861;31854:12;31818:2;31931:4;31927:9;31920:4;31912:6;31908:17;31904:33;31896:41;;31995:4;31989;31985:15;31977:23;;31755:255;;;;32017:104;;32108:3;32100:11;;32094:27;;;;32128:158;;32196:3;32188:11;;32233:3;32230:1;32223:14;32265:4;32262:1;32252:18;32244:26;;32182:104;;;;32293:115;;32394:4;32384:14;;32372:36;;;;32415:118;;32505:5;32499:12;32489:22;;32470:63;;;;32540:122;;32634:5;32628:12;32618:22;;32599:63;;;;32669:113;;32772:4;32767:3;32763:14;32755:22;;32749:33;;;;32790:147;;32928:3;32913:18;;32906:31;;;;;32946:153;;33051:6;33046:3;33039:19;33088:4;33083:3;33079:14;33064:29;;33032:67;;;;;33108:163;;33223:6;33218:3;33211:19;33260:4;33255:3;33251:14;33236:29;;33204:67;;;;;33280:145;;33416:3;33401:18;;33394:31;;;;;33433:91;;33495:24;33513:5;33495:24;;;33484:35;;33478:46;;;;33531:85;;33604:5;33597:13;33590:21;33579:32;;33573:43;;;;33623:72;;33685:5;33674:16;;33668:27;;;;33702:121;;33775:42;33768:5;33764:54;33753:65;;33747:76;;;;33830:72;;33892:5;33881:16;;33875:27;;;;33909:81;;33980:4;33973:5;33969:16;33958:27;;33952:38;;;;33997:129;;34084:37;34115:5;34084:37;;;34071:50;;34065:61;;;;34133:121;;34212:37;34243:5;34212:37;;;34199:50;;34193:61;;;;34261:108;;34340:24;34358:5;34340:24;;;34327:37;;34321:48;;;;34377:145;34458:6;34453:3;34448;34435:30;34514:1;34505:6;34500:3;34496:16;34489:27;34428:94;;;;34531:268;34596:1;34603:101;34617:6;34614:1;34611:13;34603:101;;;34693:1;34688:3;34684:11;34678:18;34674:1;34669:3;34665:11;34658:39;34639:2;34636:1;34632:10;34627:15;;34603:101;;;34719:6;34716:1;34713:13;34710:2;;;34784:1;34775:6;34770:3;34766:16;34759:27;34710:2;34580:219;;;;;34807:97;;34895:2;34891:7;34886:2;34879:5;34875:14;34871:28;34861:38;;34855:49;;;;34912:117;34981:24;34999:5;34981:24;;;34974:5;34971:35;34961:2;;35020:1;35017;35010:12;34961:2;34955:74;;35036:117;35105:24;35123:5;35105:24;;;35098:5;35095:35;35085:2;;35144:1;35141;35134:12;35085:2;35079:74;;35160:117;35229:24;35247:5;35229:24;;;35222:5;35219:35;35209:2;;35268:1;35265;35258:12;35209:2;35203:74;;10022:88:6;10094:9;10082;;:21;;;;;;;;;;;;;;;;;;10022:88;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.21 <0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol\";\n\ncontract GXC is ERC20PresetMinterPauser {\n    bytes32 public constant ADJUST_ROLE = keccak256(\"ADJUST_ROLE\");\n\n    string[10] private txidArray;\n    uint256 arrayLength = 10;\n    uint256 private id;\n\n    uint256 minMint = 50000;\n    uint256 minBurn = 50000;\n\n    uint8 decimals_ = 5;\n\n    event Mint(address indexed to, uint256 amount, string from, string txid);\n\n    event Burn(address indexed from, uint256 amount, string to);\n\n    constructor(string memory name, string memory symbol)\n        public\n        ERC20PresetMinterPauser(name, symbol)\n    {\n        super._setupDecimals(decimals_);\n        _setupRole(ADJUST_ROLE, _msgSender());\n    }\n\n    function mint(\n        address to,\n        uint256 amount,\n        string memory from,\n        string memory txid\n    ) public virtual {\n        require(\n            amount >= minMint,\n            \"The minimum value must be greater than minMint\"\n        );\n        for (uint256 i = 0; i < arrayLength; i++) {\n            require(\n                keccak256(abi.encodePacked(txidArray[i])) !=\n                    keccak256(abi.encodePacked(txid)),\n                \"The txid has existed\"\n            );\n        }\n        uint256 id_number = id % arrayLength;\n        txidArray[id_number] = txid;\n        id++;\n        super.mint(to, amount);\n        emit Mint(to, amount, from, txid);\n    }\n\n    function burn(uint256 amount, string memory to) public virtual {\n        require(\n            amount >= minBurn,\n            \"The minimum value must be greater than minBurn\"\n        );\n        super.burn(amount);\n        emit Burn(msg.sender, amount, to);\n    }\n\n    function adjustMinNumber(uint256 _burnMin, uint256 _mintMin)\n        public\n        virtual\n    {\n        require(hasRole(ADJUST_ROLE, _msgSender()), \"Adjust role required\");\n        minMint = _mintMin;\n        minBurn = _burnMin;\n    }\n\n    function getTxidArray() public returns (string[10] memory) {\n        return txidArray;\n    }\n}\n",
  "sourcePath": "/Users/bijianing/gxc-solidity/contracts/GXC.sol",
  "ast": {
    "absolutePath": "/Users/bijianing/gxc-solidity/contracts/GXC.sol",
    "exportedSymbols": {
      "GXC": [
        213
      ]
    },
    "id": 214,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 214,
        "sourceUnit": 862,
        "src": "101:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 861,
              "src": "188:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$861",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "188:23:0"
          }
        ],
        "contractDependencies": [
          273,
          543,
          861,
          1349,
          1402,
          1437,
          1506,
          2163
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 213,
        "linearizedBaseContracts": [
          213,
          861,
          1437,
          2163,
          1402,
          1349,
          1506,
          543,
          273
        ],
        "name": "GXC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "b0ab3968",
            "id": 10,
            "name": "ADJUST_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "218:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "41444a5553545f524f4c45",
                  "id": 8,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "266:13:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  },
                  "value": "ADJUST_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  }
                ],
                "id": 7,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "256:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "256:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "txidArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "287:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$10_storage",
              "typeString": "string[10]"
            },
            "typeName": {
              "baseType": {
                "id": 11,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "287:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 13,
              "length": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 12,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "294:2:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "287:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                "typeString": "string[10]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "name": "arrayLength",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "321:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "343:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "id",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "351:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "351:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "name": "minMint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "376:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "394:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "name": "minBurn",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "405:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "405:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "423:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "name": "decimals_",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "435:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 26,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "435:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "453:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "Mint",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "472:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "492:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "508:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "521:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:62:0"
            },
            "src": "461:73:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 46,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 46,
                  "src": "551:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 46,
                  "src": "573:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 46,
                  "src": "589:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "550:49:0"
            },
            "src": "540:60:0"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "725:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "756:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "735:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$213",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setupDecimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1338,
                      "src": "735:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "735:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "ADJUST_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "787:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 65,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "800:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "800:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 63,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "776:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "776:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "776:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 53,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "707:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 54,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50,
                    "src": "713:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 55,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 52,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 861,
                  "src": "683:23:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$861_$",
                    "typeString": "type(contract ERC20PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "683:37:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "618:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "638:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:42:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:0"
            },
            "scope": 213,
            "src": "606:214:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "961:552:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "992:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "minMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1002:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "992:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4d696e74",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1023:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        },
                        "value": "The minimum value must be greater than minMint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        }
                      ],
                      "id": 81,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "971:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "971:110:0"
                },
                {
                  "body": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1133:202:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 102,
                                          "name": "txidArray",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 14,
                                          "src": "1199:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                                            "typeString": "string storage ref[10] storage ref"
                                          }
                                        },
                                        "id": 104,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 103,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 89,
                                          "src": "1209:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1199:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 100,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1182:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 101,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1182:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1182:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 99,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1172:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1172:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 110,
                                        "name": "txid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "1264:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 108,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1247:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1247:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1247:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 107,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1237:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1237:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1172:98:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652074786964206861732065786973746564",
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1288:22:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              },
                              "value": "The txid has existed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              }
                            ],
                            "id": 98,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1147:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1147:177:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1147:177:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1111:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1115:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1111:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 118,
                  "initializationExpression": {
                    "assignments": [
                      89
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 89,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 118,
                        "src": "1096:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1096:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 91,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1108:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1096:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1128:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "1128:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 97,
                    "nodeType": "ExpressionStatement",
                    "src": "1128:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1091:244:0"
                },
                {
                  "assignments": [
                    120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120,
                      "name": "id_number",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 148,
                      "src": "1344:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 119,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1344:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 124,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1364:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1369:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1364:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1344:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "txidArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1390:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                          "typeString": "string storage ref[10] storage ref"
                        }
                      },
                      "id": 127,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "id_number",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1400:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1390:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 128,
                      "name": "txid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1413:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1390:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1427:4:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 131,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1427:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:4:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1452:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1456:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1441:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$213",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "1441:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1483:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1487:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1495:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "txid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1501:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 141,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1478:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1478:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "EmitStatement",
                  "src": "1473:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2fb102cf",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "849:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "869:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "893:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "893:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "921:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "839:106:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:0:0"
            },
            "scope": 213,
            "src": "826:687:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1582:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "1613:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "minBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1623:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1613:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4275726e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1644:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        },
                        "value": "The minimum value must be greater than minBurn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1592:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1723:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1712:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$213",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1369,
                      "src": "1712:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1712:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "1712:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1750:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1750:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1762:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1770:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 169,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1745:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "EmitStatement",
                  "src": "1740:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7641e6f3",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "1533:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "1549:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1532:34:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1582:0:0"
            },
            "scope": 213,
            "src": "1519:261:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "1882:140:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "ADJUST_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1908:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 187,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "1921:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1921:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 185,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "1900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1900:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646a75737420726f6c65207265717569726564",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1936:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        },
                        "value": "Adjust role required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1892:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "minMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1969:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_mintMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "1979:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1969:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "minBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1997:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_burnMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2007:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1997:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:18:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9b308f9e",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustMinNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "name": "_burnMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 202,
                  "src": "1811:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "name": "_mintMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 202,
                  "src": "1829:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1810:36:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1882:0:0"
            },
            "scope": 213,
            "src": "1786:236:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "2087:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 209,
                    "name": "txidArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "2104:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                      "typeString": "string storage ref[10] storage ref"
                    }
                  },
                  "functionReturnParameters": 208,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "2097:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6210ee85",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxidArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2049:2:0"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 212,
                  "src": "2068:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$10_memory_ptr",
                    "typeString": "string[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2068:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 206,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2075:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2068:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                      "typeString": "string[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2067:19:0"
            },
            "scope": 213,
            "src": "2028:92:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 214,
        "src": "172:1950:0"
      }
    ],
    "src": "33:2090:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bijianing/gxc-solidity/contracts/GXC.sol",
    "exportedSymbols": {
      "GXC": [
        213
      ]
    },
    "id": 214,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 214,
        "sourceUnit": 862,
        "src": "101:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 861,
              "src": "188:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$861",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "188:23:0"
          }
        ],
        "contractDependencies": [
          273,
          543,
          861,
          1349,
          1402,
          1437,
          1506,
          2163
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 213,
        "linearizedBaseContracts": [
          213,
          861,
          1437,
          2163,
          1402,
          1349,
          1506,
          543,
          273
        ],
        "name": "GXC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "b0ab3968",
            "id": 10,
            "name": "ADJUST_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "218:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "41444a5553545f524f4c45",
                  "id": 8,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "266:13:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  },
                  "value": "ADJUST_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ef765358d14e314da3182bb18974c5fe330c9e28291095869f197cad06c4550c",
                    "typeString": "literal_string \"ADJUST_ROLE\""
                  }
                ],
                "id": 7,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "256:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "256:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "txidArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "287:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$10_storage",
              "typeString": "string[10]"
            },
            "typeName": {
              "baseType": {
                "id": 11,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "287:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 13,
              "length": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 12,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "294:2:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "287:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                "typeString": "string[10]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "name": "arrayLength",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "321:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "343:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "id",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "351:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "351:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "name": "minMint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "376:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "394:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "name": "minBurn",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "405:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "405:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530303030",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "423:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "name": "decimals_",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 213,
            "src": "435:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 26,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "435:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "453:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "Mint",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "472:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "492:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "508:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "521:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:62:0"
            },
            "src": "461:73:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 46,
            "name": "Burn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 46,
                  "src": "551:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 46,
                  "src": "573:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 46,
                  "src": "589:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "550:49:0"
            },
            "src": "540:60:0"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "725:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "756:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "735:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$213",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setupDecimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1338,
                      "src": "735:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "735:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "ADJUST_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "787:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 65,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "800:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "800:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 63,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "776:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "776:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "776:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 53,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "707:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 54,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50,
                    "src": "713:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 55,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 52,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 861,
                  "src": "683:23:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$861_$",
                    "typeString": "type(contract ERC20PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "683:37:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "618:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "638:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:42:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:0"
            },
            "scope": 213,
            "src": "606:214:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "961:552:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "992:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "minMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1002:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "992:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4d696e74",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1023:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        },
                        "value": "The minimum value must be greater than minMint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a896145dc38eb08f76cbbbd27278c98f74f9e8472392810323d1add4fdd2b5",
                          "typeString": "literal_string \"The minimum value must be greater than minMint\""
                        }
                      ],
                      "id": 81,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "971:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "971:110:0"
                },
                {
                  "body": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1133:202:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 102,
                                          "name": "txidArray",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 14,
                                          "src": "1199:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                                            "typeString": "string storage ref[10] storage ref"
                                          }
                                        },
                                        "id": 104,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 103,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 89,
                                          "src": "1209:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1199:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 100,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1182:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 101,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1182:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1182:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 99,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1172:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1172:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 110,
                                        "name": "txid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "1264:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 108,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1247:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1247:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1247:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 107,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1237:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1237:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1172:98:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652074786964206861732065786973746564",
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1288:22:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              },
                              "value": "The txid has existed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22bb602159c34eb5f4c9bbf7ca18f8444ac323d1c366a2036141454e3ea34db8",
                                "typeString": "literal_string \"The txid has existed\""
                              }
                            ],
                            "id": 98,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1147:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1147:177:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1147:177:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1111:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1115:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1111:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 118,
                  "initializationExpression": {
                    "assignments": [
                      89
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 89,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 118,
                        "src": "1096:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1096:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 91,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1108:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1096:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1128:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "1128:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 97,
                    "nodeType": "ExpressionStatement",
                    "src": "1128:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1091:244:0"
                },
                {
                  "assignments": [
                    120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120,
                      "name": "id_number",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 148,
                      "src": "1344:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 119,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1344:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 124,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1364:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "arrayLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1369:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1364:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1344:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "txidArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1390:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                          "typeString": "string storage ref[10] storage ref"
                        }
                      },
                      "id": 127,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "id_number",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1400:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1390:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 128,
                      "name": "txid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1413:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1390:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1427:4:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 131,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1427:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:4:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1452:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1456:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1441:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$213",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "1441:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1483:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1487:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1495:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "txid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1501:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 141,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1478:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1478:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "EmitStatement",
                  "src": "1473:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2fb102cf",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "849:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "869:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "893:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "893:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "name": "txid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "921:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "839:106:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:0:0"
            },
            "scope": 213,
            "src": "826:687:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1582:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "1613:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "minBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1623:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1613:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d696e696d756d2076616c7565206d7573742062652067726561746572207468616e206d696e4275726e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1644:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        },
                        "value": "The minimum value must be greater than minBurn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6ca557d5ce7bd113db2027d3522bc04af227528822065872a79152f367e108",
                          "typeString": "literal_string \"The minimum value must be greater than minBurn\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1592:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1723:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1712:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_GXC_$213",
                          "typeString": "contract super GXC"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1369,
                      "src": "1712:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1712:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "1712:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1750:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1750:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1762:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1770:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 169,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1745:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "EmitStatement",
                  "src": "1740:33:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7641e6f3",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "1533:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "1549:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1532:34:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1582:0:0"
            },
            "scope": 213,
            "src": "1519:261:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "1882:140:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "ADJUST_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1908:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 187,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "1921:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1921:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 185,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "1900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1900:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646a75737420726f6c65207265717569726564",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1936:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        },
                        "value": "Adjust role required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_554dac20b54a0964534e93dff9cd325b0a28d54174352ed60b72ba1609eb4b0f",
                          "typeString": "literal_string \"Adjust role required\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1892:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "minMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1969:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_mintMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "1979:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1969:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "minBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1997:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_burnMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2007:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1997:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:18:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9b308f9e",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustMinNumber",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "name": "_burnMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 202,
                  "src": "1811:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "name": "_mintMin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 202,
                  "src": "1829:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1810:36:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1882:0:0"
            },
            "scope": 213,
            "src": "1786:236:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "2087:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 209,
                    "name": "txidArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "2104:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage",
                      "typeString": "string storage ref[10] storage ref"
                    }
                  },
                  "functionReturnParameters": 208,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "2097:16:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6210ee85",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxidArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2049:2:0"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 212,
                  "src": "2068:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$10_memory_ptr",
                    "typeString": "string[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2068:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 206,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2075:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2068:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$10_storage_ptr",
                      "typeString": "string[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2067:19:0"
            },
            "scope": 213,
            "src": "2028:92:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 214,
        "src": "172:1950:0"
      }
    ],
    "src": "33:2090:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x47e772fda56eb54ab211642ce5421882c49fc2b7033455982af14588ae4207ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "to",
              "type": "string"
            }
          ],
          "name": "Burn",
          "type": "event"
        },
        "0xf2cbb0418e3132958dca4cc2e9ab525cf64488dfc7c0eaa45cdeb6c42b30490a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "txid",
              "type": "string"
            }
          ],
          "name": "Mint",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x19A3Cf23FEE09f02108A40c7038bC52983a87113",
      "transactionHash": "0xf6c375ac94029e32383164a1dacbdc7f017f6df9ffdf945891cbf61465be4ab6"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-21T03:25:00.205Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}